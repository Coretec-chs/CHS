@using WebUI.Utility
@model object

@{

    var htmlAttributes = new RouteValueDictionary();

    if (ViewBag.@class != null)
    {
        htmlAttributes.Add("class", "form-control input-sm text-uppercase" + ViewBag.@class);
    }
    else
    {
        htmlAttributes.Add("class", "form-control input-sm text-uppercase");
    }

    if (ViewBag.@onchange != null)
    {
        htmlAttributes.Add("onchange", ViewBag.@onchange);
    }

    if (ViewBag.@onclick != null)
    {
        htmlAttributes.Add("onclick", ViewBag.@onclick);
    }

    if (ViewBag.disabled != null && ViewBag.disabled != string.Empty)
    {
        htmlAttributes.Add("disabled", ViewBag.disabled);
    }

    if (ViewBag.mininput != null)
    {
        htmlAttributes.Add("data-minimum-input-length", ViewBag.mininput);
    }

    htmlAttributes.Add("data-plugin", "select2");
}
<div class="form-group-sm@(Html.ValidationErrorFor(m => m, " has-error"))">
    @Html.LabelFor(m => m, new { @class = "control-label" },"",true)
    <div class="controls">
        @Html.DropDownListFor(m => m, new SelectList(ViewBag.selectList, "Value", "Text", Model), "Select...", htmlAttributes)
        @* @Html.DropDownListFor(m => m, (IEnumerable < SelectListItem >) ViewBag.selectList, "Select...", htmlAttributes)*@
        @Html.ValidationMessageFor(m => m, null, new { @class = "help-block" })
    </div>
</div>
