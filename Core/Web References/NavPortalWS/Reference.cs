//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Core.NavPortalWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PortalWebService_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService")]
    public partial class PortalWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HRLeaveAppInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback HRTransportAppInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback HRTrainingAppMofifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback HRTrainingLinesParticipantsInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SumbitTrainingForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback HRTransportRequisitionInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendLeaveForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubmitTransportRequestForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback HRAppraisalHeaderInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback HRAppraisalInsertLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback Store_SendApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback Appraisal_SendApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback LeaveReimbursment_SendApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback HR_Objectives_SettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback HR_Objectives_Setting_KPIOperationCompleted;
        
        private System.Threading.SendOrPostCallback HR_Objectives_Setting_KPI_ModifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback HR_Objectives_Setting_KPI_Modify_SupOperationCompleted;
        
        private System.Threading.SendOrPostCallback HR_Objectives_Setting_CDOperationCompleted;
        
        private System.Threading.SendOrPostCallback HR_Objectives_Setting_CD_Modify_SupOperationCompleted;
        
        private System.Threading.SendOrPostCallback HR_Objectives_Setting_CD_ModifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback HR_Objectives_Setting_KRAOperationCompleted;
        
        private System.Threading.SendOrPostCallback HR_Objectives_Setting_PTOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertPurchaseHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchaseRequisitionLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback HRTimesheetLinesModifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback HRTimesheetLinesApprovalStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendEmployeeRequisitionForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback HRTimesheetLinesDeleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback HR_Objectives_Setting_Modify_SupOperationCompleted;
        
        private System.Threading.SendOrPostCallback HR_Objectives_Setting_ModifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertImprestSurrenderHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertImprestHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertImprestLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertImprestSurrenderLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback HrHREmployeeRequisitionsInsertOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendApprovalRequestFromPortalOperationCompleted;
        
        private System.Threading.SendOrPostCallback Timesheet_SendApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback StoreRequisitionLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurchReq_SendApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback Approver_SendLeaveForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback Approver_SendLeaveReimbursmentForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback Approver_SendEmpReqForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback Approver_SendTransReqForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback Approver_SendStoreReqForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback Approver_SendTravelReqForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback Approver_SendPurchaseReqForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback Approver_SendTimesheetForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback Approver_SendPerfForApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateApprovalEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback Travel_SendApprovalRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadSurrenderRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UploadJobApplicationRecordsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendAppraisalToSupervisorOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnAppraisalToSupervisorOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnAppraisalToAppraiseeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Approve_AppraisalOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyImprestHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ModifyImprestLinesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteImprestHeaderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteImprestLinesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PortalWebService() {
            this.Url = global::Core.Properties.Settings.Default.Core_NavPortalWS_PortalWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HRLeaveAppInsertCompletedEventHandler HRLeaveAppInsertCompleted;
        
        /// <remarks/>
        public event HRTransportAppInsertCompletedEventHandler HRTransportAppInsertCompleted;
        
        /// <remarks/>
        public event HRTrainingAppMofifyCompletedEventHandler HRTrainingAppMofifyCompleted;
        
        /// <remarks/>
        public event HRTrainingLinesParticipantsInsertCompletedEventHandler HRTrainingLinesParticipantsInsertCompleted;
        
        /// <remarks/>
        public event SumbitTrainingForApprovalCompletedEventHandler SumbitTrainingForApprovalCompleted;
        
        /// <remarks/>
        public event HRTransportRequisitionInsertCompletedEventHandler HRTransportRequisitionInsertCompleted;
        
        /// <remarks/>
        public event SendLeaveForApprovalCompletedEventHandler SendLeaveForApprovalCompleted;
        
        /// <remarks/>
        public event SubmitTransportRequestForApprovalCompletedEventHandler SubmitTransportRequestForApprovalCompleted;
        
        /// <remarks/>
        public event HRAppraisalHeaderInsertCompletedEventHandler HRAppraisalHeaderInsertCompleted;
        
        /// <remarks/>
        public event HRAppraisalInsertLinesCompletedEventHandler HRAppraisalInsertLinesCompleted;
        
        /// <remarks/>
        public event Store_SendApprovalRequestCompletedEventHandler Store_SendApprovalRequestCompleted;
        
        /// <remarks/>
        public event Appraisal_SendApprovalRequestCompletedEventHandler Appraisal_SendApprovalRequestCompleted;
        
        /// <remarks/>
        public event LeaveReimbursment_SendApprovalRequestCompletedEventHandler LeaveReimbursment_SendApprovalRequestCompleted;
        
        /// <remarks/>
        public event HR_Objectives_SettingCompletedEventHandler HR_Objectives_SettingCompleted;
        
        /// <remarks/>
        public event HR_Objectives_Setting_KPICompletedEventHandler HR_Objectives_Setting_KPICompleted;
        
        /// <remarks/>
        public event HR_Objectives_Setting_KPI_ModifyCompletedEventHandler HR_Objectives_Setting_KPI_ModifyCompleted;
        
        /// <remarks/>
        public event HR_Objectives_Setting_KPI_Modify_SupCompletedEventHandler HR_Objectives_Setting_KPI_Modify_SupCompleted;
        
        /// <remarks/>
        public event HR_Objectives_Setting_CDCompletedEventHandler HR_Objectives_Setting_CDCompleted;
        
        /// <remarks/>
        public event HR_Objectives_Setting_CD_Modify_SupCompletedEventHandler HR_Objectives_Setting_CD_Modify_SupCompleted;
        
        /// <remarks/>
        public event HR_Objectives_Setting_CD_ModifyCompletedEventHandler HR_Objectives_Setting_CD_ModifyCompleted;
        
        /// <remarks/>
        public event HR_Objectives_Setting_KRACompletedEventHandler HR_Objectives_Setting_KRACompleted;
        
        /// <remarks/>
        public event HR_Objectives_Setting_PTCompletedEventHandler HR_Objectives_Setting_PTCompleted;
        
        /// <remarks/>
        public event InsertPurchaseHeaderCompletedEventHandler InsertPurchaseHeaderCompleted;
        
        /// <remarks/>
        public event PurchaseRequisitionLinesCompletedEventHandler PurchaseRequisitionLinesCompleted;
        
        /// <remarks/>
        public event HRTimesheetLinesModifyCompletedEventHandler HRTimesheetLinesModifyCompleted;
        
        /// <remarks/>
        public event HRTimesheetLinesApprovalStatusCompletedEventHandler HRTimesheetLinesApprovalStatusCompleted;
        
        /// <remarks/>
        public event SendEmployeeRequisitionForApprovalCompletedEventHandler SendEmployeeRequisitionForApprovalCompleted;
        
        /// <remarks/>
        public event HRTimesheetLinesDeleteCompletedEventHandler HRTimesheetLinesDeleteCompleted;
        
        /// <remarks/>
        public event HR_Objectives_Setting_Modify_SupCompletedEventHandler HR_Objectives_Setting_Modify_SupCompleted;
        
        /// <remarks/>
        public event HR_Objectives_Setting_ModifyCompletedEventHandler HR_Objectives_Setting_ModifyCompleted;
        
        /// <remarks/>
        public event InsertImprestSurrenderHeaderCompletedEventHandler InsertImprestSurrenderHeaderCompleted;
        
        /// <remarks/>
        public event InsertImprestHeaderCompletedEventHandler InsertImprestHeaderCompleted;
        
        /// <remarks/>
        public event InsertImprestLinesCompletedEventHandler InsertImprestLinesCompleted;
        
        /// <remarks/>
        public event InsertImprestSurrenderLinesCompletedEventHandler InsertImprestSurrenderLinesCompleted;
        
        /// <remarks/>
        public event HrHREmployeeRequisitionsInsertCompletedEventHandler HrHREmployeeRequisitionsInsertCompleted;
        
        /// <remarks/>
        public event SendApprovalRequestFromPortalCompletedEventHandler SendApprovalRequestFromPortalCompleted;
        
        /// <remarks/>
        public event Timesheet_SendApprovalRequestCompletedEventHandler Timesheet_SendApprovalRequestCompleted;
        
        /// <remarks/>
        public event StoreRequisitionLinesCompletedEventHandler StoreRequisitionLinesCompleted;
        
        /// <remarks/>
        public event PurchReq_SendApprovalRequestCompletedEventHandler PurchReq_SendApprovalRequestCompleted;
        
        /// <remarks/>
        public event Approver_SendLeaveForApprovalCompletedEventHandler Approver_SendLeaveForApprovalCompleted;
        
        /// <remarks/>
        public event Approver_SendLeaveReimbursmentForApprovalCompletedEventHandler Approver_SendLeaveReimbursmentForApprovalCompleted;
        
        /// <remarks/>
        public event Approver_SendEmpReqForApprovalCompletedEventHandler Approver_SendEmpReqForApprovalCompleted;
        
        /// <remarks/>
        public event Approver_SendTransReqForApprovalCompletedEventHandler Approver_SendTransReqForApprovalCompleted;
        
        /// <remarks/>
        public event Approver_SendStoreReqForApprovalCompletedEventHandler Approver_SendStoreReqForApprovalCompleted;
        
        /// <remarks/>
        public event Approver_SendTravelReqForApprovalCompletedEventHandler Approver_SendTravelReqForApprovalCompleted;
        
        /// <remarks/>
        public event Approver_SendPurchaseReqForApprovalCompletedEventHandler Approver_SendPurchaseReqForApprovalCompleted;
        
        /// <remarks/>
        public event Approver_SendTimesheetForApprovalCompletedEventHandler Approver_SendTimesheetForApprovalCompleted;
        
        /// <remarks/>
        public event Approver_SendPerfForApprovalCompletedEventHandler Approver_SendPerfForApprovalCompleted;
        
        /// <remarks/>
        public event UpdateApprovalEntriesCompletedEventHandler UpdateApprovalEntriesCompleted;
        
        /// <remarks/>
        public event Travel_SendApprovalRequestCompletedEventHandler Travel_SendApprovalRequestCompleted;
        
        /// <remarks/>
        public event UploadRecordsCompletedEventHandler UploadRecordsCompleted;
        
        /// <remarks/>
        public event UploadSurrenderRecordsCompletedEventHandler UploadSurrenderRecordsCompleted;
        
        /// <remarks/>
        public event UploadJobApplicationRecordsCompletedEventHandler UploadJobApplicationRecordsCompleted;
        
        /// <remarks/>
        public event SendAppraisalToSupervisorCompletedEventHandler SendAppraisalToSupervisorCompleted;
        
        /// <remarks/>
        public event ReturnAppraisalToSupervisorCompletedEventHandler ReturnAppraisalToSupervisorCompleted;
        
        /// <remarks/>
        public event ReturnAppraisalToAppraiseeCompletedEventHandler ReturnAppraisalToAppraiseeCompleted;
        
        /// <remarks/>
        public event Approve_AppraisalCompletedEventHandler Approve_AppraisalCompleted;
        
        /// <remarks/>
        public event ModifyImprestHeaderCompletedEventHandler ModifyImprestHeaderCompleted;
        
        /// <remarks/>
        public event ModifyImprestLinesCompletedEventHandler ModifyImprestLinesCompleted;
        
        /// <remarks/>
        public event DeleteImprestHeaderCompletedEventHandler DeleteImprestHeaderCompleted;
        
        /// <remarks/>
        public event DeleteImprestLinesCompletedEventHandler DeleteImprestLinesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:HRLeaveAppInsert", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="HRLeaveAppInsert_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string HRLeaveAppInsert(
                    string employeeNo, 
                    string names, 
                    string leaveType, 
                    decimal daysApplied, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime returnDate, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime applicationDate, 
                    int status, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime endDate, 
                    string domain_UserID, 
                    string employeeNumber, 
                    string applicantComments, 
                    string responsibilityCenter, 
                    string reliever, 
                    bool request_Leave_Allowance, 
                    string applicant_Supervisor, 
                    string relieverName) {
            object[] results = this.Invoke("HRLeaveAppInsert", new object[] {
                        employeeNo,
                        names,
                        leaveType,
                        daysApplied,
                        startDate,
                        returnDate,
                        applicationDate,
                        status,
                        endDate,
                        domain_UserID,
                        employeeNumber,
                        applicantComments,
                        responsibilityCenter,
                        reliever,
                        request_Leave_Allowance,
                        applicant_Supervisor,
                        relieverName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HRLeaveAppInsertAsync(
                    string employeeNo, 
                    string names, 
                    string leaveType, 
                    decimal daysApplied, 
                    System.DateTime startDate, 
                    System.DateTime returnDate, 
                    System.DateTime applicationDate, 
                    int status, 
                    System.DateTime endDate, 
                    string domain_UserID, 
                    string employeeNumber, 
                    string applicantComments, 
                    string responsibilityCenter, 
                    string reliever, 
                    bool request_Leave_Allowance, 
                    string applicant_Supervisor, 
                    string relieverName) {
            this.HRLeaveAppInsertAsync(employeeNo, names, leaveType, daysApplied, startDate, returnDate, applicationDate, status, endDate, domain_UserID, employeeNumber, applicantComments, responsibilityCenter, reliever, request_Leave_Allowance, applicant_Supervisor, relieverName, null);
        }
        
        /// <remarks/>
        public void HRLeaveAppInsertAsync(
                    string employeeNo, 
                    string names, 
                    string leaveType, 
                    decimal daysApplied, 
                    System.DateTime startDate, 
                    System.DateTime returnDate, 
                    System.DateTime applicationDate, 
                    int status, 
                    System.DateTime endDate, 
                    string domain_UserID, 
                    string employeeNumber, 
                    string applicantComments, 
                    string responsibilityCenter, 
                    string reliever, 
                    bool request_Leave_Allowance, 
                    string applicant_Supervisor, 
                    string relieverName, 
                    object userState) {
            if ((this.HRLeaveAppInsertOperationCompleted == null)) {
                this.HRLeaveAppInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHRLeaveAppInsertOperationCompleted);
            }
            this.InvokeAsync("HRLeaveAppInsert", new object[] {
                        employeeNo,
                        names,
                        leaveType,
                        daysApplied,
                        startDate,
                        returnDate,
                        applicationDate,
                        status,
                        endDate,
                        domain_UserID,
                        employeeNumber,
                        applicantComments,
                        responsibilityCenter,
                        reliever,
                        request_Leave_Allowance,
                        applicant_Supervisor,
                        relieverName}, this.HRLeaveAppInsertOperationCompleted, userState);
        }
        
        private void OnHRLeaveAppInsertOperationCompleted(object arg) {
            if ((this.HRLeaveAppInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HRLeaveAppInsertCompleted(this, new HRLeaveAppInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:HRTransportAppInsert", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="HRTransportAppInsert_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string HRTransportAppInsert(
                    decimal daysApplied, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime returnDate, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime applicationDate, 
                    int status, 
                    string fromDestination, 
                    string toDestination, 
                    string purposeOfTrip, 
                    string pickupPoint, 
                    string names, 
                    string returnFrom, 
                    string returnTo, 
                    string description, 
                    string accompanyingEmployees, 
                    string pickupTime, 
                    string employeeNo) {
            object[] results = this.Invoke("HRTransportAppInsert", new object[] {
                        daysApplied,
                        startDate,
                        returnDate,
                        applicationDate,
                        status,
                        fromDestination,
                        toDestination,
                        purposeOfTrip,
                        pickupPoint,
                        names,
                        returnFrom,
                        returnTo,
                        description,
                        accompanyingEmployees,
                        pickupTime,
                        employeeNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HRTransportAppInsertAsync(
                    decimal daysApplied, 
                    System.DateTime startDate, 
                    System.DateTime returnDate, 
                    System.DateTime applicationDate, 
                    int status, 
                    string fromDestination, 
                    string toDestination, 
                    string purposeOfTrip, 
                    string pickupPoint, 
                    string names, 
                    string returnFrom, 
                    string returnTo, 
                    string description, 
                    string accompanyingEmployees, 
                    string pickupTime, 
                    string employeeNo) {
            this.HRTransportAppInsertAsync(daysApplied, startDate, returnDate, applicationDate, status, fromDestination, toDestination, purposeOfTrip, pickupPoint, names, returnFrom, returnTo, description, accompanyingEmployees, pickupTime, employeeNo, null);
        }
        
        /// <remarks/>
        public void HRTransportAppInsertAsync(
                    decimal daysApplied, 
                    System.DateTime startDate, 
                    System.DateTime returnDate, 
                    System.DateTime applicationDate, 
                    int status, 
                    string fromDestination, 
                    string toDestination, 
                    string purposeOfTrip, 
                    string pickupPoint, 
                    string names, 
                    string returnFrom, 
                    string returnTo, 
                    string description, 
                    string accompanyingEmployees, 
                    string pickupTime, 
                    string employeeNo, 
                    object userState) {
            if ((this.HRTransportAppInsertOperationCompleted == null)) {
                this.HRTransportAppInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHRTransportAppInsertOperationCompleted);
            }
            this.InvokeAsync("HRTransportAppInsert", new object[] {
                        daysApplied,
                        startDate,
                        returnDate,
                        applicationDate,
                        status,
                        fromDestination,
                        toDestination,
                        purposeOfTrip,
                        pickupPoint,
                        names,
                        returnFrom,
                        returnTo,
                        description,
                        accompanyingEmployees,
                        pickupTime,
                        employeeNo}, this.HRTransportAppInsertOperationCompleted, userState);
        }
        
        private void OnHRTransportAppInsertOperationCompleted(object arg) {
            if ((this.HRTransportAppInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HRTransportAppInsertCompleted(this, new HRTransportAppInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:HRTrainingAppMofify", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="HRTrainingAppMofify_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string HRTrainingAppMofify(
                    string applicationCode, 
                    string courseCode, 
                    string description, 
                    string location, 
                    string empResponsibilityCenter, 
                    int noOfParticipant, 
                    string purposeOfTraining, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime fromDate, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime toDate, 
                    int duration, 
                    int durationUnits, 
                    string employeeNo, 
                    string provider, 
                    string providerName, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime applicationDate, 
                    int tableID, 
                    string employeeName, 
                    string durationFormula, 
                    string userID, 
                    string trainingDescription, 
                    decimal totalCost, 
                    int recommendedTraining, 
                    string justification, 
                    int termsConditionsAgreed) {
            object[] results = this.Invoke("HRTrainingAppMofify", new object[] {
                        applicationCode,
                        courseCode,
                        description,
                        location,
                        empResponsibilityCenter,
                        noOfParticipant,
                        purposeOfTraining,
                        fromDate,
                        toDate,
                        duration,
                        durationUnits,
                        employeeNo,
                        provider,
                        providerName,
                        applicationDate,
                        tableID,
                        employeeName,
                        durationFormula,
                        userID,
                        trainingDescription,
                        totalCost,
                        recommendedTraining,
                        justification,
                        termsConditionsAgreed});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HRTrainingAppMofifyAsync(
                    string applicationCode, 
                    string courseCode, 
                    string description, 
                    string location, 
                    string empResponsibilityCenter, 
                    int noOfParticipant, 
                    string purposeOfTraining, 
                    System.DateTime fromDate, 
                    System.DateTime toDate, 
                    int duration, 
                    int durationUnits, 
                    string employeeNo, 
                    string provider, 
                    string providerName, 
                    System.DateTime applicationDate, 
                    int tableID, 
                    string employeeName, 
                    string durationFormula, 
                    string userID, 
                    string trainingDescription, 
                    decimal totalCost, 
                    int recommendedTraining, 
                    string justification, 
                    int termsConditionsAgreed) {
            this.HRTrainingAppMofifyAsync(applicationCode, courseCode, description, location, empResponsibilityCenter, noOfParticipant, purposeOfTraining, fromDate, toDate, duration, durationUnits, employeeNo, provider, providerName, applicationDate, tableID, employeeName, durationFormula, userID, trainingDescription, totalCost, recommendedTraining, justification, termsConditionsAgreed, null);
        }
        
        /// <remarks/>
        public void HRTrainingAppMofifyAsync(
                    string applicationCode, 
                    string courseCode, 
                    string description, 
                    string location, 
                    string empResponsibilityCenter, 
                    int noOfParticipant, 
                    string purposeOfTraining, 
                    System.DateTime fromDate, 
                    System.DateTime toDate, 
                    int duration, 
                    int durationUnits, 
                    string employeeNo, 
                    string provider, 
                    string providerName, 
                    System.DateTime applicationDate, 
                    int tableID, 
                    string employeeName, 
                    string durationFormula, 
                    string userID, 
                    string trainingDescription, 
                    decimal totalCost, 
                    int recommendedTraining, 
                    string justification, 
                    int termsConditionsAgreed, 
                    object userState) {
            if ((this.HRTrainingAppMofifyOperationCompleted == null)) {
                this.HRTrainingAppMofifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHRTrainingAppMofifyOperationCompleted);
            }
            this.InvokeAsync("HRTrainingAppMofify", new object[] {
                        applicationCode,
                        courseCode,
                        description,
                        location,
                        empResponsibilityCenter,
                        noOfParticipant,
                        purposeOfTraining,
                        fromDate,
                        toDate,
                        duration,
                        durationUnits,
                        employeeNo,
                        provider,
                        providerName,
                        applicationDate,
                        tableID,
                        employeeName,
                        durationFormula,
                        userID,
                        trainingDescription,
                        totalCost,
                        recommendedTraining,
                        justification,
                        termsConditionsAgreed}, this.HRTrainingAppMofifyOperationCompleted, userState);
        }
        
        private void OnHRTrainingAppMofifyOperationCompleted(object arg) {
            if ((this.HRTrainingAppMofifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HRTrainingAppMofifyCompleted(this, new HRTrainingAppMofifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:HRTrainingLinesParticipa" +
            "ntsInsert", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="HRTrainingLinesParticipantsInsert_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void HRTrainingLinesParticipantsInsert(string trainingDocApplicationNo, string employeeNo, bool suggested) {
            this.Invoke("HRTrainingLinesParticipantsInsert", new object[] {
                        trainingDocApplicationNo,
                        employeeNo,
                        suggested});
        }
        
        /// <remarks/>
        public void HRTrainingLinesParticipantsInsertAsync(string trainingDocApplicationNo, string employeeNo, bool suggested) {
            this.HRTrainingLinesParticipantsInsertAsync(trainingDocApplicationNo, employeeNo, suggested, null);
        }
        
        /// <remarks/>
        public void HRTrainingLinesParticipantsInsertAsync(string trainingDocApplicationNo, string employeeNo, bool suggested, object userState) {
            if ((this.HRTrainingLinesParticipantsInsertOperationCompleted == null)) {
                this.HRTrainingLinesParticipantsInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHRTrainingLinesParticipantsInsertOperationCompleted);
            }
            this.InvokeAsync("HRTrainingLinesParticipantsInsert", new object[] {
                        trainingDocApplicationNo,
                        employeeNo,
                        suggested}, this.HRTrainingLinesParticipantsInsertOperationCompleted, userState);
        }
        
        private void OnHRTrainingLinesParticipantsInsertOperationCompleted(object arg) {
            if ((this.HRTrainingLinesParticipantsInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HRTrainingLinesParticipantsInsertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:SumbitTrainingForApprova" +
            "l", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="SumbitTrainingForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SumbitTrainingForApproval(string applicationNo, int docType, string userID) {
            this.Invoke("SumbitTrainingForApproval", new object[] {
                        applicationNo,
                        docType,
                        userID});
        }
        
        /// <remarks/>
        public void SumbitTrainingForApprovalAsync(string applicationNo, int docType, string userID) {
            this.SumbitTrainingForApprovalAsync(applicationNo, docType, userID, null);
        }
        
        /// <remarks/>
        public void SumbitTrainingForApprovalAsync(string applicationNo, int docType, string userID, object userState) {
            if ((this.SumbitTrainingForApprovalOperationCompleted == null)) {
                this.SumbitTrainingForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSumbitTrainingForApprovalOperationCompleted);
            }
            this.InvokeAsync("SumbitTrainingForApproval", new object[] {
                        applicationNo,
                        docType,
                        userID}, this.SumbitTrainingForApprovalOperationCompleted, userState);
        }
        
        private void OnSumbitTrainingForApprovalOperationCompleted(object arg) {
            if ((this.SumbitTrainingForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SumbitTrainingForApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:HRTransportRequisitionIn" +
            "sert", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="HRTransportRequisitionInsert_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string HRTransportRequisitionInsert(
                    decimal daysApplied_HTR, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime startDate_HTR, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime returnDate_HTR, 
                    int status_HTR, 
                    string userID_HTR, 
                    string employeeNo_HTR, 
                    string responsibilityCenter_HTR, 
                    string applicantComments_HTR, 
                    string purposeOfTrip_HTR, 
                    string transportType_HTR, 
                    string timeOfTrip_HTR, 
                    string pickupPoint_HTR, 
                    string fromDestination_HTR, 
                    string toDestination_HTR, 
                    int noOfStaffTravelling_HTR, 
                    string departmentCode_HTR, 
                    string employeeName_HTR, 
                    string stationCode_HTR) {
            object[] results = this.Invoke("HRTransportRequisitionInsert", new object[] {
                        daysApplied_HTR,
                        startDate_HTR,
                        returnDate_HTR,
                        status_HTR,
                        userID_HTR,
                        employeeNo_HTR,
                        responsibilityCenter_HTR,
                        applicantComments_HTR,
                        purposeOfTrip_HTR,
                        transportType_HTR,
                        timeOfTrip_HTR,
                        pickupPoint_HTR,
                        fromDestination_HTR,
                        toDestination_HTR,
                        noOfStaffTravelling_HTR,
                        departmentCode_HTR,
                        employeeName_HTR,
                        stationCode_HTR});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HRTransportRequisitionInsertAsync(
                    decimal daysApplied_HTR, 
                    System.DateTime startDate_HTR, 
                    System.DateTime returnDate_HTR, 
                    int status_HTR, 
                    string userID_HTR, 
                    string employeeNo_HTR, 
                    string responsibilityCenter_HTR, 
                    string applicantComments_HTR, 
                    string purposeOfTrip_HTR, 
                    string transportType_HTR, 
                    string timeOfTrip_HTR, 
                    string pickupPoint_HTR, 
                    string fromDestination_HTR, 
                    string toDestination_HTR, 
                    int noOfStaffTravelling_HTR, 
                    string departmentCode_HTR, 
                    string employeeName_HTR, 
                    string stationCode_HTR) {
            this.HRTransportRequisitionInsertAsync(daysApplied_HTR, startDate_HTR, returnDate_HTR, status_HTR, userID_HTR, employeeNo_HTR, responsibilityCenter_HTR, applicantComments_HTR, purposeOfTrip_HTR, transportType_HTR, timeOfTrip_HTR, pickupPoint_HTR, fromDestination_HTR, toDestination_HTR, noOfStaffTravelling_HTR, departmentCode_HTR, employeeName_HTR, stationCode_HTR, null);
        }
        
        /// <remarks/>
        public void HRTransportRequisitionInsertAsync(
                    decimal daysApplied_HTR, 
                    System.DateTime startDate_HTR, 
                    System.DateTime returnDate_HTR, 
                    int status_HTR, 
                    string userID_HTR, 
                    string employeeNo_HTR, 
                    string responsibilityCenter_HTR, 
                    string applicantComments_HTR, 
                    string purposeOfTrip_HTR, 
                    string transportType_HTR, 
                    string timeOfTrip_HTR, 
                    string pickupPoint_HTR, 
                    string fromDestination_HTR, 
                    string toDestination_HTR, 
                    int noOfStaffTravelling_HTR, 
                    string departmentCode_HTR, 
                    string employeeName_HTR, 
                    string stationCode_HTR, 
                    object userState) {
            if ((this.HRTransportRequisitionInsertOperationCompleted == null)) {
                this.HRTransportRequisitionInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHRTransportRequisitionInsertOperationCompleted);
            }
            this.InvokeAsync("HRTransportRequisitionInsert", new object[] {
                        daysApplied_HTR,
                        startDate_HTR,
                        returnDate_HTR,
                        status_HTR,
                        userID_HTR,
                        employeeNo_HTR,
                        responsibilityCenter_HTR,
                        applicantComments_HTR,
                        purposeOfTrip_HTR,
                        transportType_HTR,
                        timeOfTrip_HTR,
                        pickupPoint_HTR,
                        fromDestination_HTR,
                        toDestination_HTR,
                        noOfStaffTravelling_HTR,
                        departmentCode_HTR,
                        employeeName_HTR,
                        stationCode_HTR}, this.HRTransportRequisitionInsertOperationCompleted, userState);
        }
        
        private void OnHRTransportRequisitionInsertOperationCompleted(object arg) {
            if ((this.HRTransportRequisitionInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HRTransportRequisitionInsertCompleted(this, new HRTransportRequisitionInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:SendLeaveForApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="SendLeaveForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendLeaveForApproval(string applicationCode, string userID) {
            this.Invoke("SendLeaveForApproval", new object[] {
                        applicationCode,
                        userID});
        }
        
        /// <remarks/>
        public void SendLeaveForApprovalAsync(string applicationCode, string userID) {
            this.SendLeaveForApprovalAsync(applicationCode, userID, null);
        }
        
        /// <remarks/>
        public void SendLeaveForApprovalAsync(string applicationCode, string userID, object userState) {
            if ((this.SendLeaveForApprovalOperationCompleted == null)) {
                this.SendLeaveForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendLeaveForApprovalOperationCompleted);
            }
            this.InvokeAsync("SendLeaveForApproval", new object[] {
                        applicationCode,
                        userID}, this.SendLeaveForApprovalOperationCompleted, userState);
        }
        
        private void OnSendLeaveForApprovalOperationCompleted(object arg) {
            if ((this.SendLeaveForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendLeaveForApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:SubmitTransportRequestFo" +
            "rApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="SubmitTransportRequestForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SubmitTransportRequestForApproval(string applicationNo, string userID) {
            this.Invoke("SubmitTransportRequestForApproval", new object[] {
                        applicationNo,
                        userID});
        }
        
        /// <remarks/>
        public void SubmitTransportRequestForApprovalAsync(string applicationNo, string userID) {
            this.SubmitTransportRequestForApprovalAsync(applicationNo, userID, null);
        }
        
        /// <remarks/>
        public void SubmitTransportRequestForApprovalAsync(string applicationNo, string userID, object userState) {
            if ((this.SubmitTransportRequestForApprovalOperationCompleted == null)) {
                this.SubmitTransportRequestForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubmitTransportRequestForApprovalOperationCompleted);
            }
            this.InvokeAsync("SubmitTransportRequestForApproval", new object[] {
                        applicationNo,
                        userID}, this.SubmitTransportRequestForApprovalOperationCompleted, userState);
        }
        
        private void OnSubmitTransportRequestForApprovalOperationCompleted(object arg) {
            if ((this.SubmitTransportRequestForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubmitTransportRequestForApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:HRAppraisalHeaderInsert", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="HRAppraisalHeaderInsert_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string HRAppraisalHeaderInsert(string appraisal_Type, string appraisal_Period, int appraisalStage, string userID, string employeeNo, int appraisalMethod, string supervisorNo, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime evaluation_Period_Start, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime evaluation_Period_End) {
            object[] results = this.Invoke("HRAppraisalHeaderInsert", new object[] {
                        appraisal_Type,
                        appraisal_Period,
                        appraisalStage,
                        userID,
                        employeeNo,
                        appraisalMethod,
                        supervisorNo,
                        evaluation_Period_Start,
                        evaluation_Period_End});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HRAppraisalHeaderInsertAsync(string appraisal_Type, string appraisal_Period, int appraisalStage, string userID, string employeeNo, int appraisalMethod, string supervisorNo, System.DateTime evaluation_Period_Start, System.DateTime evaluation_Period_End) {
            this.HRAppraisalHeaderInsertAsync(appraisal_Type, appraisal_Period, appraisalStage, userID, employeeNo, appraisalMethod, supervisorNo, evaluation_Period_Start, evaluation_Period_End, null);
        }
        
        /// <remarks/>
        public void HRAppraisalHeaderInsertAsync(string appraisal_Type, string appraisal_Period, int appraisalStage, string userID, string employeeNo, int appraisalMethod, string supervisorNo, System.DateTime evaluation_Period_Start, System.DateTime evaluation_Period_End, object userState) {
            if ((this.HRAppraisalHeaderInsertOperationCompleted == null)) {
                this.HRAppraisalHeaderInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHRAppraisalHeaderInsertOperationCompleted);
            }
            this.InvokeAsync("HRAppraisalHeaderInsert", new object[] {
                        appraisal_Type,
                        appraisal_Period,
                        appraisalStage,
                        userID,
                        employeeNo,
                        appraisalMethod,
                        supervisorNo,
                        evaluation_Period_Start,
                        evaluation_Period_End}, this.HRAppraisalHeaderInsertOperationCompleted, userState);
        }
        
        private void OnHRAppraisalHeaderInsertOperationCompleted(object arg) {
            if ((this.HRAppraisalHeaderInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HRAppraisalHeaderInsertCompleted(this, new HRAppraisalHeaderInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:HRAppraisalInsertLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="HRAppraisalInsertLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int HRAppraisalInsertLines(string appraisal_No, string appraisal_Period, string employee_No, int categorize_As, string employee_Comments, decimal self_Rating, int sub_Category, string unit_of_Measure) {
            object[] results = this.Invoke("HRAppraisalInsertLines", new object[] {
                        appraisal_No,
                        appraisal_Period,
                        employee_No,
                        categorize_As,
                        employee_Comments,
                        self_Rating,
                        sub_Category,
                        unit_of_Measure});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void HRAppraisalInsertLinesAsync(string appraisal_No, string appraisal_Period, string employee_No, int categorize_As, string employee_Comments, decimal self_Rating, int sub_Category, string unit_of_Measure) {
            this.HRAppraisalInsertLinesAsync(appraisal_No, appraisal_Period, employee_No, categorize_As, employee_Comments, self_Rating, sub_Category, unit_of_Measure, null);
        }
        
        /// <remarks/>
        public void HRAppraisalInsertLinesAsync(string appraisal_No, string appraisal_Period, string employee_No, int categorize_As, string employee_Comments, decimal self_Rating, int sub_Category, string unit_of_Measure, object userState) {
            if ((this.HRAppraisalInsertLinesOperationCompleted == null)) {
                this.HRAppraisalInsertLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHRAppraisalInsertLinesOperationCompleted);
            }
            this.InvokeAsync("HRAppraisalInsertLines", new object[] {
                        appraisal_No,
                        appraisal_Period,
                        employee_No,
                        categorize_As,
                        employee_Comments,
                        self_Rating,
                        sub_Category,
                        unit_of_Measure}, this.HRAppraisalInsertLinesOperationCompleted, userState);
        }
        
        private void OnHRAppraisalInsertLinesOperationCompleted(object arg) {
            if ((this.HRAppraisalInsertLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HRAppraisalInsertLinesCompleted(this, new HRAppraisalInsertLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:Store_SendApprovalReques" +
            "t", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="Store_SendApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Store_SendApprovalRequest(string applicationCode, string userID) {
            this.Invoke("Store_SendApprovalRequest", new object[] {
                        applicationCode,
                        userID});
        }
        
        /// <remarks/>
        public void Store_SendApprovalRequestAsync(string applicationCode, string userID) {
            this.Store_SendApprovalRequestAsync(applicationCode, userID, null);
        }
        
        /// <remarks/>
        public void Store_SendApprovalRequestAsync(string applicationCode, string userID, object userState) {
            if ((this.Store_SendApprovalRequestOperationCompleted == null)) {
                this.Store_SendApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStore_SendApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("Store_SendApprovalRequest", new object[] {
                        applicationCode,
                        userID}, this.Store_SendApprovalRequestOperationCompleted, userState);
        }
        
        private void OnStore_SendApprovalRequestOperationCompleted(object arg) {
            if ((this.Store_SendApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Store_SendApprovalRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:Appraisal_SendApprovalRe" +
            "quest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="Appraisal_SendApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Appraisal_SendApprovalRequest(string applicationCode, string userID) {
            this.Invoke("Appraisal_SendApprovalRequest", new object[] {
                        applicationCode,
                        userID});
        }
        
        /// <remarks/>
        public void Appraisal_SendApprovalRequestAsync(string applicationCode, string userID) {
            this.Appraisal_SendApprovalRequestAsync(applicationCode, userID, null);
        }
        
        /// <remarks/>
        public void Appraisal_SendApprovalRequestAsync(string applicationCode, string userID, object userState) {
            if ((this.Appraisal_SendApprovalRequestOperationCompleted == null)) {
                this.Appraisal_SendApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAppraisal_SendApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("Appraisal_SendApprovalRequest", new object[] {
                        applicationCode,
                        userID}, this.Appraisal_SendApprovalRequestOperationCompleted, userState);
        }
        
        private void OnAppraisal_SendApprovalRequestOperationCompleted(object arg) {
            if ((this.Appraisal_SendApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Appraisal_SendApprovalRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:LeaveReimbursment_SendAp" +
            "provalRequest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="LeaveReimbursment_SendApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void LeaveReimbursment_SendApprovalRequest(string applicationCode, string userID) {
            this.Invoke("LeaveReimbursment_SendApprovalRequest", new object[] {
                        applicationCode,
                        userID});
        }
        
        /// <remarks/>
        public void LeaveReimbursment_SendApprovalRequestAsync(string applicationCode, string userID) {
            this.LeaveReimbursment_SendApprovalRequestAsync(applicationCode, userID, null);
        }
        
        /// <remarks/>
        public void LeaveReimbursment_SendApprovalRequestAsync(string applicationCode, string userID, object userState) {
            if ((this.LeaveReimbursment_SendApprovalRequestOperationCompleted == null)) {
                this.LeaveReimbursment_SendApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLeaveReimbursment_SendApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("LeaveReimbursment_SendApprovalRequest", new object[] {
                        applicationCode,
                        userID}, this.LeaveReimbursment_SendApprovalRequestOperationCompleted, userState);
        }
        
        private void OnLeaveReimbursment_SendApprovalRequestOperationCompleted(object arg) {
            if ((this.LeaveReimbursment_SendApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LeaveReimbursment_SendApprovalRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:HR_Objectives_Setting", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="HR_Objectives_Setting_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int HR_Objectives_Setting(string appraisal_No, string appraisal_Period, string employee_No, int quarter, string target, string objective, decimal weightage, string kPI, string kRA, string emp_Comments, decimal emp_Ratings) {
            object[] results = this.Invoke("HR_Objectives_Setting", new object[] {
                        appraisal_No,
                        appraisal_Period,
                        employee_No,
                        quarter,
                        target,
                        objective,
                        weightage,
                        kPI,
                        kRA,
                        emp_Comments,
                        emp_Ratings});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void HR_Objectives_SettingAsync(string appraisal_No, string appraisal_Period, string employee_No, int quarter, string target, string objective, decimal weightage, string kPI, string kRA, string emp_Comments, decimal emp_Ratings) {
            this.HR_Objectives_SettingAsync(appraisal_No, appraisal_Period, employee_No, quarter, target, objective, weightage, kPI, kRA, emp_Comments, emp_Ratings, null);
        }
        
        /// <remarks/>
        public void HR_Objectives_SettingAsync(string appraisal_No, string appraisal_Period, string employee_No, int quarter, string target, string objective, decimal weightage, string kPI, string kRA, string emp_Comments, decimal emp_Ratings, object userState) {
            if ((this.HR_Objectives_SettingOperationCompleted == null)) {
                this.HR_Objectives_SettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHR_Objectives_SettingOperationCompleted);
            }
            this.InvokeAsync("HR_Objectives_Setting", new object[] {
                        appraisal_No,
                        appraisal_Period,
                        employee_No,
                        quarter,
                        target,
                        objective,
                        weightage,
                        kPI,
                        kRA,
                        emp_Comments,
                        emp_Ratings}, this.HR_Objectives_SettingOperationCompleted, userState);
        }
        
        private void OnHR_Objectives_SettingOperationCompleted(object arg) {
            if ((this.HR_Objectives_SettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HR_Objectives_SettingCompleted(this, new HR_Objectives_SettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:HR_Objectives_Setting_KP" +
            "I", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="HR_Objectives_Setting_KPI_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int HR_Objectives_Setting_KPI(string appraisal_No, string appraisal_Period, string employee_No, string employee_Comments, decimal self_Rating, string performanceIndicatorCode) {
            object[] results = this.Invoke("HR_Objectives_Setting_KPI", new object[] {
                        appraisal_No,
                        appraisal_Period,
                        employee_No,
                        employee_Comments,
                        self_Rating,
                        performanceIndicatorCode});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void HR_Objectives_Setting_KPIAsync(string appraisal_No, string appraisal_Period, string employee_No, string employee_Comments, decimal self_Rating, string performanceIndicatorCode) {
            this.HR_Objectives_Setting_KPIAsync(appraisal_No, appraisal_Period, employee_No, employee_Comments, self_Rating, performanceIndicatorCode, null);
        }
        
        /// <remarks/>
        public void HR_Objectives_Setting_KPIAsync(string appraisal_No, string appraisal_Period, string employee_No, string employee_Comments, decimal self_Rating, string performanceIndicatorCode, object userState) {
            if ((this.HR_Objectives_Setting_KPIOperationCompleted == null)) {
                this.HR_Objectives_Setting_KPIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHR_Objectives_Setting_KPIOperationCompleted);
            }
            this.InvokeAsync("HR_Objectives_Setting_KPI", new object[] {
                        appraisal_No,
                        appraisal_Period,
                        employee_No,
                        employee_Comments,
                        self_Rating,
                        performanceIndicatorCode}, this.HR_Objectives_Setting_KPIOperationCompleted, userState);
        }
        
        private void OnHR_Objectives_Setting_KPIOperationCompleted(object arg) {
            if ((this.HR_Objectives_Setting_KPICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HR_Objectives_Setting_KPICompleted(this, new HR_Objectives_Setting_KPICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:HR_Objectives_Setting_KP" +
            "I_Modify", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="HR_Objectives_Setting_KPI_Modify_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int HR_Objectives_Setting_KPI_Modify(string appraisal_No, string appraisal_Period, string employee_No, string employee_Comments, decimal self_Rating, string performanceIndicatorCode, int no_Series) {
            object[] results = this.Invoke("HR_Objectives_Setting_KPI_Modify", new object[] {
                        appraisal_No,
                        appraisal_Period,
                        employee_No,
                        employee_Comments,
                        self_Rating,
                        performanceIndicatorCode,
                        no_Series});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void HR_Objectives_Setting_KPI_ModifyAsync(string appraisal_No, string appraisal_Period, string employee_No, string employee_Comments, decimal self_Rating, string performanceIndicatorCode, int no_Series) {
            this.HR_Objectives_Setting_KPI_ModifyAsync(appraisal_No, appraisal_Period, employee_No, employee_Comments, self_Rating, performanceIndicatorCode, no_Series, null);
        }
        
        /// <remarks/>
        public void HR_Objectives_Setting_KPI_ModifyAsync(string appraisal_No, string appraisal_Period, string employee_No, string employee_Comments, decimal self_Rating, string performanceIndicatorCode, int no_Series, object userState) {
            if ((this.HR_Objectives_Setting_KPI_ModifyOperationCompleted == null)) {
                this.HR_Objectives_Setting_KPI_ModifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHR_Objectives_Setting_KPI_ModifyOperationCompleted);
            }
            this.InvokeAsync("HR_Objectives_Setting_KPI_Modify", new object[] {
                        appraisal_No,
                        appraisal_Period,
                        employee_No,
                        employee_Comments,
                        self_Rating,
                        performanceIndicatorCode,
                        no_Series}, this.HR_Objectives_Setting_KPI_ModifyOperationCompleted, userState);
        }
        
        private void OnHR_Objectives_Setting_KPI_ModifyOperationCompleted(object arg) {
            if ((this.HR_Objectives_Setting_KPI_ModifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HR_Objectives_Setting_KPI_ModifyCompleted(this, new HR_Objectives_Setting_KPI_ModifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:HR_Objectives_Setting_KP" +
            "I_Modify_Sup", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="HR_Objectives_Setting_KPI_Modify_Sup_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int HR_Objectives_Setting_KPI_Modify_Sup(string appraisal_No, string appraisal_Period, string employee_No, string employee_Comments, decimal self_Rating, int no_Series) {
            object[] results = this.Invoke("HR_Objectives_Setting_KPI_Modify_Sup", new object[] {
                        appraisal_No,
                        appraisal_Period,
                        employee_No,
                        employee_Comments,
                        self_Rating,
                        no_Series});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void HR_Objectives_Setting_KPI_Modify_SupAsync(string appraisal_No, string appraisal_Period, string employee_No, string employee_Comments, decimal self_Rating, int no_Series) {
            this.HR_Objectives_Setting_KPI_Modify_SupAsync(appraisal_No, appraisal_Period, employee_No, employee_Comments, self_Rating, no_Series, null);
        }
        
        /// <remarks/>
        public void HR_Objectives_Setting_KPI_Modify_SupAsync(string appraisal_No, string appraisal_Period, string employee_No, string employee_Comments, decimal self_Rating, int no_Series, object userState) {
            if ((this.HR_Objectives_Setting_KPI_Modify_SupOperationCompleted == null)) {
                this.HR_Objectives_Setting_KPI_Modify_SupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHR_Objectives_Setting_KPI_Modify_SupOperationCompleted);
            }
            this.InvokeAsync("HR_Objectives_Setting_KPI_Modify_Sup", new object[] {
                        appraisal_No,
                        appraisal_Period,
                        employee_No,
                        employee_Comments,
                        self_Rating,
                        no_Series}, this.HR_Objectives_Setting_KPI_Modify_SupOperationCompleted, userState);
        }
        
        private void OnHR_Objectives_Setting_KPI_Modify_SupOperationCompleted(object arg) {
            if ((this.HR_Objectives_Setting_KPI_Modify_SupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HR_Objectives_Setting_KPI_Modify_SupCompleted(this, new HR_Objectives_Setting_KPI_Modify_SupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:HR_Objectives_Setting_CD" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="HR_Objectives_Setting_CD_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int HR_Objectives_Setting_CD(string appraisal_No, string appraisal_Period, string employee_No, string employee_Comments) {
            object[] results = this.Invoke("HR_Objectives_Setting_CD", new object[] {
                        appraisal_No,
                        appraisal_Period,
                        employee_No,
                        employee_Comments});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void HR_Objectives_Setting_CDAsync(string appraisal_No, string appraisal_Period, string employee_No, string employee_Comments) {
            this.HR_Objectives_Setting_CDAsync(appraisal_No, appraisal_Period, employee_No, employee_Comments, null);
        }
        
        /// <remarks/>
        public void HR_Objectives_Setting_CDAsync(string appraisal_No, string appraisal_Period, string employee_No, string employee_Comments, object userState) {
            if ((this.HR_Objectives_Setting_CDOperationCompleted == null)) {
                this.HR_Objectives_Setting_CDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHR_Objectives_Setting_CDOperationCompleted);
            }
            this.InvokeAsync("HR_Objectives_Setting_CD", new object[] {
                        appraisal_No,
                        appraisal_Period,
                        employee_No,
                        employee_Comments}, this.HR_Objectives_Setting_CDOperationCompleted, userState);
        }
        
        private void OnHR_Objectives_Setting_CDOperationCompleted(object arg) {
            if ((this.HR_Objectives_Setting_CDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HR_Objectives_Setting_CDCompleted(this, new HR_Objectives_Setting_CDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:HR_Objectives_Setting_CD" +
            "_Modify_Sup", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="HR_Objectives_Setting_CD_Modify_Sup_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int HR_Objectives_Setting_CD_Modify_Sup(string appraisal_No, string appraisal_Period, string employee_No, string employee_Comments, int no_Series, decimal ratings) {
            object[] results = this.Invoke("HR_Objectives_Setting_CD_Modify_Sup", new object[] {
                        appraisal_No,
                        appraisal_Period,
                        employee_No,
                        employee_Comments,
                        no_Series,
                        ratings});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void HR_Objectives_Setting_CD_Modify_SupAsync(string appraisal_No, string appraisal_Period, string employee_No, string employee_Comments, int no_Series, decimal ratings) {
            this.HR_Objectives_Setting_CD_Modify_SupAsync(appraisal_No, appraisal_Period, employee_No, employee_Comments, no_Series, ratings, null);
        }
        
        /// <remarks/>
        public void HR_Objectives_Setting_CD_Modify_SupAsync(string appraisal_No, string appraisal_Period, string employee_No, string employee_Comments, int no_Series, decimal ratings, object userState) {
            if ((this.HR_Objectives_Setting_CD_Modify_SupOperationCompleted == null)) {
                this.HR_Objectives_Setting_CD_Modify_SupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHR_Objectives_Setting_CD_Modify_SupOperationCompleted);
            }
            this.InvokeAsync("HR_Objectives_Setting_CD_Modify_Sup", new object[] {
                        appraisal_No,
                        appraisal_Period,
                        employee_No,
                        employee_Comments,
                        no_Series,
                        ratings}, this.HR_Objectives_Setting_CD_Modify_SupOperationCompleted, userState);
        }
        
        private void OnHR_Objectives_Setting_CD_Modify_SupOperationCompleted(object arg) {
            if ((this.HR_Objectives_Setting_CD_Modify_SupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HR_Objectives_Setting_CD_Modify_SupCompleted(this, new HR_Objectives_Setting_CD_Modify_SupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:HR_Objectives_Setting_CD" +
            "_Modify", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="HR_Objectives_Setting_CD_Modify_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int HR_Objectives_Setting_CD_Modify(string appraisal_No, string appraisal_Period, string employee_No, string employee_Comments, int no_Series) {
            object[] results = this.Invoke("HR_Objectives_Setting_CD_Modify", new object[] {
                        appraisal_No,
                        appraisal_Period,
                        employee_No,
                        employee_Comments,
                        no_Series});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void HR_Objectives_Setting_CD_ModifyAsync(string appraisal_No, string appraisal_Period, string employee_No, string employee_Comments, int no_Series) {
            this.HR_Objectives_Setting_CD_ModifyAsync(appraisal_No, appraisal_Period, employee_No, employee_Comments, no_Series, null);
        }
        
        /// <remarks/>
        public void HR_Objectives_Setting_CD_ModifyAsync(string appraisal_No, string appraisal_Period, string employee_No, string employee_Comments, int no_Series, object userState) {
            if ((this.HR_Objectives_Setting_CD_ModifyOperationCompleted == null)) {
                this.HR_Objectives_Setting_CD_ModifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHR_Objectives_Setting_CD_ModifyOperationCompleted);
            }
            this.InvokeAsync("HR_Objectives_Setting_CD_Modify", new object[] {
                        appraisal_No,
                        appraisal_Period,
                        employee_No,
                        employee_Comments,
                        no_Series}, this.HR_Objectives_Setting_CD_ModifyOperationCompleted, userState);
        }
        
        private void OnHR_Objectives_Setting_CD_ModifyOperationCompleted(object arg) {
            if ((this.HR_Objectives_Setting_CD_ModifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HR_Objectives_Setting_CD_ModifyCompleted(this, new HR_Objectives_Setting_CD_ModifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:HR_Objectives_Setting_KR" +
            "A", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="HR_Objectives_Setting_KRA_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int HR_Objectives_Setting_KRA(string appraisal_No, string appraisal_Period, string employee_No, string goal, string measures, string employee_Comments) {
            object[] results = this.Invoke("HR_Objectives_Setting_KRA", new object[] {
                        appraisal_No,
                        appraisal_Period,
                        employee_No,
                        goal,
                        measures,
                        employee_Comments});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void HR_Objectives_Setting_KRAAsync(string appraisal_No, string appraisal_Period, string employee_No, string goal, string measures, string employee_Comments) {
            this.HR_Objectives_Setting_KRAAsync(appraisal_No, appraisal_Period, employee_No, goal, measures, employee_Comments, null);
        }
        
        /// <remarks/>
        public void HR_Objectives_Setting_KRAAsync(string appraisal_No, string appraisal_Period, string employee_No, string goal, string measures, string employee_Comments, object userState) {
            if ((this.HR_Objectives_Setting_KRAOperationCompleted == null)) {
                this.HR_Objectives_Setting_KRAOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHR_Objectives_Setting_KRAOperationCompleted);
            }
            this.InvokeAsync("HR_Objectives_Setting_KRA", new object[] {
                        appraisal_No,
                        appraisal_Period,
                        employee_No,
                        goal,
                        measures,
                        employee_Comments}, this.HR_Objectives_Setting_KRAOperationCompleted, userState);
        }
        
        private void OnHR_Objectives_Setting_KRAOperationCompleted(object arg) {
            if ((this.HR_Objectives_Setting_KRACompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HR_Objectives_Setting_KRACompleted(this, new HR_Objectives_Setting_KRACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:HR_Objectives_Setting_PT" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="HR_Objectives_Setting_PT_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int HR_Objectives_Setting_PT(string appraisal_No, string appraisal_Period, string employee_No, string employee_Comments, string target) {
            object[] results = this.Invoke("HR_Objectives_Setting_PT", new object[] {
                        appraisal_No,
                        appraisal_Period,
                        employee_No,
                        employee_Comments,
                        target});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void HR_Objectives_Setting_PTAsync(string appraisal_No, string appraisal_Period, string employee_No, string employee_Comments, string target) {
            this.HR_Objectives_Setting_PTAsync(appraisal_No, appraisal_Period, employee_No, employee_Comments, target, null);
        }
        
        /// <remarks/>
        public void HR_Objectives_Setting_PTAsync(string appraisal_No, string appraisal_Period, string employee_No, string employee_Comments, string target, object userState) {
            if ((this.HR_Objectives_Setting_PTOperationCompleted == null)) {
                this.HR_Objectives_Setting_PTOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHR_Objectives_Setting_PTOperationCompleted);
            }
            this.InvokeAsync("HR_Objectives_Setting_PT", new object[] {
                        appraisal_No,
                        appraisal_Period,
                        employee_No,
                        employee_Comments,
                        target}, this.HR_Objectives_Setting_PTOperationCompleted, userState);
        }
        
        private void OnHR_Objectives_Setting_PTOperationCompleted(object arg) {
            if ((this.HR_Objectives_Setting_PTCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HR_Objectives_Setting_PTCompleted(this, new HR_Objectives_Setting_PTCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:InsertPurchaseHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="InsertPurchaseHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertPurchaseHeader([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime orderDate, string donorCode, string projectCode, string programCode, string activity, string responsibilityCenter, string purpose, string userID) {
            object[] results = this.Invoke("InsertPurchaseHeader", new object[] {
                        orderDate,
                        donorCode,
                        projectCode,
                        programCode,
                        activity,
                        responsibilityCenter,
                        purpose,
                        userID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertPurchaseHeaderAsync(System.DateTime orderDate, string donorCode, string projectCode, string programCode, string activity, string responsibilityCenter, string purpose, string userID) {
            this.InsertPurchaseHeaderAsync(orderDate, donorCode, projectCode, programCode, activity, responsibilityCenter, purpose, userID, null);
        }
        
        /// <remarks/>
        public void InsertPurchaseHeaderAsync(System.DateTime orderDate, string donorCode, string projectCode, string programCode, string activity, string responsibilityCenter, string purpose, string userID, object userState) {
            if ((this.InsertPurchaseHeaderOperationCompleted == null)) {
                this.InsertPurchaseHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertPurchaseHeaderOperationCompleted);
            }
            this.InvokeAsync("InsertPurchaseHeader", new object[] {
                        orderDate,
                        donorCode,
                        projectCode,
                        programCode,
                        activity,
                        responsibilityCenter,
                        purpose,
                        userID}, this.InsertPurchaseHeaderOperationCompleted, userState);
        }
        
        private void OnInsertPurchaseHeaderOperationCompleted(object arg) {
            if ((this.InsertPurchaseHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertPurchaseHeaderCompleted(this, new InsertPurchaseHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:PurchaseRequisitionLines" +
            "", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="PurchaseRequisitionLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int PurchaseRequisitionLines(string no, int type, string description_2, decimal quantity_Requested, string shortcut_Dimension_5_Code, string shortcut_Dimension_2_Code, string shortcut_Dimension_1_Code, string requistion_No, string shortcut_Dimension_3_Code, string shortcut_Dimension_4_Code, string description, string unit_of_measure, string gen_Prod_Posting_Group) {
            object[] results = this.Invoke("PurchaseRequisitionLines", new object[] {
                        no,
                        type,
                        description_2,
                        quantity_Requested,
                        shortcut_Dimension_5_Code,
                        shortcut_Dimension_2_Code,
                        shortcut_Dimension_1_Code,
                        requistion_No,
                        shortcut_Dimension_3_Code,
                        shortcut_Dimension_4_Code,
                        description,
                        unit_of_measure,
                        gen_Prod_Posting_Group});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void PurchaseRequisitionLinesAsync(string no, int type, string description_2, decimal quantity_Requested, string shortcut_Dimension_5_Code, string shortcut_Dimension_2_Code, string shortcut_Dimension_1_Code, string requistion_No, string shortcut_Dimension_3_Code, string shortcut_Dimension_4_Code, string description, string unit_of_measure, string gen_Prod_Posting_Group) {
            this.PurchaseRequisitionLinesAsync(no, type, description_2, quantity_Requested, shortcut_Dimension_5_Code, shortcut_Dimension_2_Code, shortcut_Dimension_1_Code, requistion_No, shortcut_Dimension_3_Code, shortcut_Dimension_4_Code, description, unit_of_measure, gen_Prod_Posting_Group, null);
        }
        
        /// <remarks/>
        public void PurchaseRequisitionLinesAsync(string no, int type, string description_2, decimal quantity_Requested, string shortcut_Dimension_5_Code, string shortcut_Dimension_2_Code, string shortcut_Dimension_1_Code, string requistion_No, string shortcut_Dimension_3_Code, string shortcut_Dimension_4_Code, string description, string unit_of_measure, string gen_Prod_Posting_Group, object userState) {
            if ((this.PurchaseRequisitionLinesOperationCompleted == null)) {
                this.PurchaseRequisitionLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchaseRequisitionLinesOperationCompleted);
            }
            this.InvokeAsync("PurchaseRequisitionLines", new object[] {
                        no,
                        type,
                        description_2,
                        quantity_Requested,
                        shortcut_Dimension_5_Code,
                        shortcut_Dimension_2_Code,
                        shortcut_Dimension_1_Code,
                        requistion_No,
                        shortcut_Dimension_3_Code,
                        shortcut_Dimension_4_Code,
                        description,
                        unit_of_measure,
                        gen_Prod_Posting_Group}, this.PurchaseRequisitionLinesOperationCompleted, userState);
        }
        
        private void OnPurchaseRequisitionLinesOperationCompleted(object arg) {
            if ((this.PurchaseRequisitionLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchaseRequisitionLinesCompleted(this, new PurchaseRequisitionLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:HRTimesheetLinesModify", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="HRTimesheetLinesModify_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int HRTimesheetLinesModify(string projectCode, string lOE, int month, int year, int entry_No) {
            object[] results = this.Invoke("HRTimesheetLinesModify", new object[] {
                        projectCode,
                        lOE,
                        month,
                        year,
                        entry_No});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void HRTimesheetLinesModifyAsync(string projectCode, string lOE, int month, int year, int entry_No) {
            this.HRTimesheetLinesModifyAsync(projectCode, lOE, month, year, entry_No, null);
        }
        
        /// <remarks/>
        public void HRTimesheetLinesModifyAsync(string projectCode, string lOE, int month, int year, int entry_No, object userState) {
            if ((this.HRTimesheetLinesModifyOperationCompleted == null)) {
                this.HRTimesheetLinesModifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHRTimesheetLinesModifyOperationCompleted);
            }
            this.InvokeAsync("HRTimesheetLinesModify", new object[] {
                        projectCode,
                        lOE,
                        month,
                        year,
                        entry_No}, this.HRTimesheetLinesModifyOperationCompleted, userState);
        }
        
        private void OnHRTimesheetLinesModifyOperationCompleted(object arg) {
            if ((this.HRTimesheetLinesModifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HRTimesheetLinesModifyCompleted(this, new HRTimesheetLinesModifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:HRTimesheetLinesApproval" +
            "Status", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="HRTimesheetLinesApprovalStatus_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int HRTimesheetLinesApprovalStatus(int entry_No, string submitAction) {
            object[] results = this.Invoke("HRTimesheetLinesApprovalStatus", new object[] {
                        entry_No,
                        submitAction});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void HRTimesheetLinesApprovalStatusAsync(int entry_No, string submitAction) {
            this.HRTimesheetLinesApprovalStatusAsync(entry_No, submitAction, null);
        }
        
        /// <remarks/>
        public void HRTimesheetLinesApprovalStatusAsync(int entry_No, string submitAction, object userState) {
            if ((this.HRTimesheetLinesApprovalStatusOperationCompleted == null)) {
                this.HRTimesheetLinesApprovalStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHRTimesheetLinesApprovalStatusOperationCompleted);
            }
            this.InvokeAsync("HRTimesheetLinesApprovalStatus", new object[] {
                        entry_No,
                        submitAction}, this.HRTimesheetLinesApprovalStatusOperationCompleted, userState);
        }
        
        private void OnHRTimesheetLinesApprovalStatusOperationCompleted(object arg) {
            if ((this.HRTimesheetLinesApprovalStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HRTimesheetLinesApprovalStatusCompleted(this, new HRTimesheetLinesApprovalStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:SendEmployeeRequisitionF" +
            "orApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="SendEmployeeRequisitionForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendEmployeeRequisitionForApproval(string applicationCode, string sender_Id) {
            this.Invoke("SendEmployeeRequisitionForApproval", new object[] {
                        applicationCode,
                        sender_Id});
        }
        
        /// <remarks/>
        public void SendEmployeeRequisitionForApprovalAsync(string applicationCode, string sender_Id) {
            this.SendEmployeeRequisitionForApprovalAsync(applicationCode, sender_Id, null);
        }
        
        /// <remarks/>
        public void SendEmployeeRequisitionForApprovalAsync(string applicationCode, string sender_Id, object userState) {
            if ((this.SendEmployeeRequisitionForApprovalOperationCompleted == null)) {
                this.SendEmployeeRequisitionForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendEmployeeRequisitionForApprovalOperationCompleted);
            }
            this.InvokeAsync("SendEmployeeRequisitionForApproval", new object[] {
                        applicationCode,
                        sender_Id}, this.SendEmployeeRequisitionForApprovalOperationCompleted, userState);
        }
        
        private void OnSendEmployeeRequisitionForApprovalOperationCompleted(object arg) {
            if ((this.SendEmployeeRequisitionForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendEmployeeRequisitionForApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:HRTimesheetLinesDelete", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="HRTimesheetLinesDelete_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int HRTimesheetLinesDelete(int entry_No) {
            object[] results = this.Invoke("HRTimesheetLinesDelete", new object[] {
                        entry_No});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void HRTimesheetLinesDeleteAsync(int entry_No) {
            this.HRTimesheetLinesDeleteAsync(entry_No, null);
        }
        
        /// <remarks/>
        public void HRTimesheetLinesDeleteAsync(int entry_No, object userState) {
            if ((this.HRTimesheetLinesDeleteOperationCompleted == null)) {
                this.HRTimesheetLinesDeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHRTimesheetLinesDeleteOperationCompleted);
            }
            this.InvokeAsync("HRTimesheetLinesDelete", new object[] {
                        entry_No}, this.HRTimesheetLinesDeleteOperationCompleted, userState);
        }
        
        private void OnHRTimesheetLinesDeleteOperationCompleted(object arg) {
            if ((this.HRTimesheetLinesDeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HRTimesheetLinesDeleteCompleted(this, new HRTimesheetLinesDeleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:HR_Objectives_Setting_Mo" +
            "dify_Sup", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="HR_Objectives_Setting_Modify_Sup_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int HR_Objectives_Setting_Modify_Sup(string appraisal_No, string appraisal_Period, string employee_No, int no_Series, string sup_Comments, decimal sup_Rating) {
            object[] results = this.Invoke("HR_Objectives_Setting_Modify_Sup", new object[] {
                        appraisal_No,
                        appraisal_Period,
                        employee_No,
                        no_Series,
                        sup_Comments,
                        sup_Rating});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void HR_Objectives_Setting_Modify_SupAsync(string appraisal_No, string appraisal_Period, string employee_No, int no_Series, string sup_Comments, decimal sup_Rating) {
            this.HR_Objectives_Setting_Modify_SupAsync(appraisal_No, appraisal_Period, employee_No, no_Series, sup_Comments, sup_Rating, null);
        }
        
        /// <remarks/>
        public void HR_Objectives_Setting_Modify_SupAsync(string appraisal_No, string appraisal_Period, string employee_No, int no_Series, string sup_Comments, decimal sup_Rating, object userState) {
            if ((this.HR_Objectives_Setting_Modify_SupOperationCompleted == null)) {
                this.HR_Objectives_Setting_Modify_SupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHR_Objectives_Setting_Modify_SupOperationCompleted);
            }
            this.InvokeAsync("HR_Objectives_Setting_Modify_Sup", new object[] {
                        appraisal_No,
                        appraisal_Period,
                        employee_No,
                        no_Series,
                        sup_Comments,
                        sup_Rating}, this.HR_Objectives_Setting_Modify_SupOperationCompleted, userState);
        }
        
        private void OnHR_Objectives_Setting_Modify_SupOperationCompleted(object arg) {
            if ((this.HR_Objectives_Setting_Modify_SupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HR_Objectives_Setting_Modify_SupCompleted(this, new HR_Objectives_Setting_Modify_SupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:HR_Objectives_Setting_Mo" +
            "dify", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="HR_Objectives_Setting_Modify_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int HR_Objectives_Setting_Modify(string appraisal_No, string appraisal_Period, string employee_No, int quarter, string target, string objective, decimal weightage, string kPI, string kRA, int no_Series, string emp_Comments, decimal emp_Rating) {
            object[] results = this.Invoke("HR_Objectives_Setting_Modify", new object[] {
                        appraisal_No,
                        appraisal_Period,
                        employee_No,
                        quarter,
                        target,
                        objective,
                        weightage,
                        kPI,
                        kRA,
                        no_Series,
                        emp_Comments,
                        emp_Rating});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void HR_Objectives_Setting_ModifyAsync(string appraisal_No, string appraisal_Period, string employee_No, int quarter, string target, string objective, decimal weightage, string kPI, string kRA, int no_Series, string emp_Comments, decimal emp_Rating) {
            this.HR_Objectives_Setting_ModifyAsync(appraisal_No, appraisal_Period, employee_No, quarter, target, objective, weightage, kPI, kRA, no_Series, emp_Comments, emp_Rating, null);
        }
        
        /// <remarks/>
        public void HR_Objectives_Setting_ModifyAsync(string appraisal_No, string appraisal_Period, string employee_No, int quarter, string target, string objective, decimal weightage, string kPI, string kRA, int no_Series, string emp_Comments, decimal emp_Rating, object userState) {
            if ((this.HR_Objectives_Setting_ModifyOperationCompleted == null)) {
                this.HR_Objectives_Setting_ModifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHR_Objectives_Setting_ModifyOperationCompleted);
            }
            this.InvokeAsync("HR_Objectives_Setting_Modify", new object[] {
                        appraisal_No,
                        appraisal_Period,
                        employee_No,
                        quarter,
                        target,
                        objective,
                        weightage,
                        kPI,
                        kRA,
                        no_Series,
                        emp_Comments,
                        emp_Rating}, this.HR_Objectives_Setting_ModifyOperationCompleted, userState);
        }
        
        private void OnHR_Objectives_Setting_ModifyOperationCompleted(object arg) {
            if ((this.HR_Objectives_Setting_ModifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HR_Objectives_Setting_ModifyCompleted(this, new HR_Objectives_Setting_ModifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:InsertImprestSurrenderHe" +
            "ader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="InsertImprestSurrenderHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertImprestSurrenderHeader(string imprestIssueDocNo, string donorCode, string projectCode, string programCode, string activity, string responsibilityCenter, string cashier, string county, string accountNo, string accountName) {
            object[] results = this.Invoke("InsertImprestSurrenderHeader", new object[] {
                        imprestIssueDocNo,
                        donorCode,
                        projectCode,
                        programCode,
                        activity,
                        responsibilityCenter,
                        cashier,
                        county,
                        accountNo,
                        accountName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertImprestSurrenderHeaderAsync(string imprestIssueDocNo, string donorCode, string projectCode, string programCode, string activity, string responsibilityCenter, string cashier, string county, string accountNo, string accountName) {
            this.InsertImprestSurrenderHeaderAsync(imprestIssueDocNo, donorCode, projectCode, programCode, activity, responsibilityCenter, cashier, county, accountNo, accountName, null);
        }
        
        /// <remarks/>
        public void InsertImprestSurrenderHeaderAsync(string imprestIssueDocNo, string donorCode, string projectCode, string programCode, string activity, string responsibilityCenter, string cashier, string county, string accountNo, string accountName, object userState) {
            if ((this.InsertImprestSurrenderHeaderOperationCompleted == null)) {
                this.InsertImprestSurrenderHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertImprestSurrenderHeaderOperationCompleted);
            }
            this.InvokeAsync("InsertImprestSurrenderHeader", new object[] {
                        imprestIssueDocNo,
                        donorCode,
                        projectCode,
                        programCode,
                        activity,
                        responsibilityCenter,
                        cashier,
                        county,
                        accountNo,
                        accountName}, this.InsertImprestSurrenderHeaderOperationCompleted, userState);
        }
        
        private void OnInsertImprestSurrenderHeaderOperationCompleted(object arg) {
            if ((this.InsertImprestSurrenderHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertImprestSurrenderHeaderCompleted(this, new InsertImprestSurrenderHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:InsertImprestHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="InsertImprestHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string InsertImprestHeader([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime beginDate, string donorCode, string projectCode, string programCode, string activity, string responsibilityCenter, string purpose, string cashier, string county, string accountNo, string accountName) {
            object[] results = this.Invoke("InsertImprestHeader", new object[] {
                        beginDate,
                        donorCode,
                        projectCode,
                        programCode,
                        activity,
                        responsibilityCenter,
                        purpose,
                        cashier,
                        county,
                        accountNo,
                        accountName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsertImprestHeaderAsync(System.DateTime beginDate, string donorCode, string projectCode, string programCode, string activity, string responsibilityCenter, string purpose, string cashier, string county, string accountNo, string accountName) {
            this.InsertImprestHeaderAsync(beginDate, donorCode, projectCode, programCode, activity, responsibilityCenter, purpose, cashier, county, accountNo, accountName, null);
        }
        
        /// <remarks/>
        public void InsertImprestHeaderAsync(System.DateTime beginDate, string donorCode, string projectCode, string programCode, string activity, string responsibilityCenter, string purpose, string cashier, string county, string accountNo, string accountName, object userState) {
            if ((this.InsertImprestHeaderOperationCompleted == null)) {
                this.InsertImprestHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertImprestHeaderOperationCompleted);
            }
            this.InvokeAsync("InsertImprestHeader", new object[] {
                        beginDate,
                        donorCode,
                        projectCode,
                        programCode,
                        activity,
                        responsibilityCenter,
                        purpose,
                        cashier,
                        county,
                        accountNo,
                        accountName}, this.InsertImprestHeaderOperationCompleted, userState);
        }
        
        private void OnInsertImprestHeaderOperationCompleted(object arg) {
            if ((this.InsertImprestHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertImprestHeaderCompleted(this, new InsertImprestHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:InsertImprestLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="InsertImprestLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int InsertImprestLines(string req_No, string advance_Type, string destination_Code, int no_of_Days, decimal amount, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime begin_Date) {
            object[] results = this.Invoke("InsertImprestLines", new object[] {
                        req_No,
                        advance_Type,
                        destination_Code,
                        no_of_Days,
                        amount,
                        begin_Date});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertImprestLinesAsync(string req_No, string advance_Type, string destination_Code, int no_of_Days, decimal amount, System.DateTime begin_Date) {
            this.InsertImprestLinesAsync(req_No, advance_Type, destination_Code, no_of_Days, amount, begin_Date, null);
        }
        
        /// <remarks/>
        public void InsertImprestLinesAsync(string req_No, string advance_Type, string destination_Code, int no_of_Days, decimal amount, System.DateTime begin_Date, object userState) {
            if ((this.InsertImprestLinesOperationCompleted == null)) {
                this.InsertImprestLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertImprestLinesOperationCompleted);
            }
            this.InvokeAsync("InsertImprestLines", new object[] {
                        req_No,
                        advance_Type,
                        destination_Code,
                        no_of_Days,
                        amount,
                        begin_Date}, this.InsertImprestLinesOperationCompleted, userState);
        }
        
        private void OnInsertImprestLinesOperationCompleted(object arg) {
            if ((this.InsertImprestLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertImprestLinesCompleted(this, new InsertImprestLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:InsertImprestSurrenderLi" +
            "nes", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="InsertImprestSurrenderLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int InsertImprestSurrenderLines(string req_No, decimal actual_Spent) {
            object[] results = this.Invoke("InsertImprestSurrenderLines", new object[] {
                        req_No,
                        actual_Spent});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertImprestSurrenderLinesAsync(string req_No, decimal actual_Spent) {
            this.InsertImprestSurrenderLinesAsync(req_No, actual_Spent, null);
        }
        
        /// <remarks/>
        public void InsertImprestSurrenderLinesAsync(string req_No, decimal actual_Spent, object userState) {
            if ((this.InsertImprestSurrenderLinesOperationCompleted == null)) {
                this.InsertImprestSurrenderLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertImprestSurrenderLinesOperationCompleted);
            }
            this.InvokeAsync("InsertImprestSurrenderLines", new object[] {
                        req_No,
                        actual_Spent}, this.InsertImprestSurrenderLinesOperationCompleted, userState);
        }
        
        private void OnInsertImprestSurrenderLinesOperationCompleted(object arg) {
            if ((this.InsertImprestSurrenderLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertImprestSurrenderLinesCompleted(this, new InsertImprestSurrenderLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:HrHREmployeeRequisitions" +
            "Insert", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="HrHREmployeeRequisitionsInsert_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string HrHREmployeeRequisitionsInsert(int requiredPositions, string requestor, string jobID, string projectCode, string responsibilityCenter, int reasonForRequest, int employmentType, int priority, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime closingDate, int recruitmentType, int requisitionType) {
            object[] results = this.Invoke("HrHREmployeeRequisitionsInsert", new object[] {
                        requiredPositions,
                        requestor,
                        jobID,
                        projectCode,
                        responsibilityCenter,
                        reasonForRequest,
                        employmentType,
                        priority,
                        closingDate,
                        recruitmentType,
                        requisitionType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HrHREmployeeRequisitionsInsertAsync(int requiredPositions, string requestor, string jobID, string projectCode, string responsibilityCenter, int reasonForRequest, int employmentType, int priority, System.DateTime closingDate, int recruitmentType, int requisitionType) {
            this.HrHREmployeeRequisitionsInsertAsync(requiredPositions, requestor, jobID, projectCode, responsibilityCenter, reasonForRequest, employmentType, priority, closingDate, recruitmentType, requisitionType, null);
        }
        
        /// <remarks/>
        public void HrHREmployeeRequisitionsInsertAsync(int requiredPositions, string requestor, string jobID, string projectCode, string responsibilityCenter, int reasonForRequest, int employmentType, int priority, System.DateTime closingDate, int recruitmentType, int requisitionType, object userState) {
            if ((this.HrHREmployeeRequisitionsInsertOperationCompleted == null)) {
                this.HrHREmployeeRequisitionsInsertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHrHREmployeeRequisitionsInsertOperationCompleted);
            }
            this.InvokeAsync("HrHREmployeeRequisitionsInsert", new object[] {
                        requiredPositions,
                        requestor,
                        jobID,
                        projectCode,
                        responsibilityCenter,
                        reasonForRequest,
                        employmentType,
                        priority,
                        closingDate,
                        recruitmentType,
                        requisitionType}, this.HrHREmployeeRequisitionsInsertOperationCompleted, userState);
        }
        
        private void OnHrHREmployeeRequisitionsInsertOperationCompleted(object arg) {
            if ((this.HrHREmployeeRequisitionsInsertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HrHREmployeeRequisitionsInsertCompleted(this, new HrHREmployeeRequisitionsInsertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:SendApprovalRequestFromP" +
            "ortal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="SendApprovalRequestFromPortal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendApprovalRequestFromPortal(int tableID, string documentNo, string senderID) {
            this.Invoke("SendApprovalRequestFromPortal", new object[] {
                        tableID,
                        documentNo,
                        senderID});
        }
        
        /// <remarks/>
        public void SendApprovalRequestFromPortalAsync(int tableID, string documentNo, string senderID) {
            this.SendApprovalRequestFromPortalAsync(tableID, documentNo, senderID, null);
        }
        
        /// <remarks/>
        public void SendApprovalRequestFromPortalAsync(int tableID, string documentNo, string senderID, object userState) {
            if ((this.SendApprovalRequestFromPortalOperationCompleted == null)) {
                this.SendApprovalRequestFromPortalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendApprovalRequestFromPortalOperationCompleted);
            }
            this.InvokeAsync("SendApprovalRequestFromPortal", new object[] {
                        tableID,
                        documentNo,
                        senderID}, this.SendApprovalRequestFromPortalOperationCompleted, userState);
        }
        
        private void OnSendApprovalRequestFromPortalOperationCompleted(object arg) {
            if ((this.SendApprovalRequestFromPortalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendApprovalRequestFromPortalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:Timesheet_SendApprovalRe" +
            "quest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="Timesheet_SendApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Timesheet_SendApprovalRequest(string applicationCode, string userID) {
            this.Invoke("Timesheet_SendApprovalRequest", new object[] {
                        applicationCode,
                        userID});
        }
        
        /// <remarks/>
        public void Timesheet_SendApprovalRequestAsync(string applicationCode, string userID) {
            this.Timesheet_SendApprovalRequestAsync(applicationCode, userID, null);
        }
        
        /// <remarks/>
        public void Timesheet_SendApprovalRequestAsync(string applicationCode, string userID, object userState) {
            if ((this.Timesheet_SendApprovalRequestOperationCompleted == null)) {
                this.Timesheet_SendApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTimesheet_SendApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("Timesheet_SendApprovalRequest", new object[] {
                        applicationCode,
                        userID}, this.Timesheet_SendApprovalRequestOperationCompleted, userState);
        }
        
        private void OnTimesheet_SendApprovalRequestOperationCompleted(object arg) {
            if ((this.Timesheet_SendApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Timesheet_SendApprovalRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:StoreRequisitionLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="StoreRequisitionLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int StoreRequisitionLines(string no, int type, string description_2, decimal quantity_Requested, string issuing_Store, string shortcut_Dimension_2_Code, string shortcut_Dimension_1_Code, string requistion_No) {
            object[] results = this.Invoke("StoreRequisitionLines", new object[] {
                        no,
                        type,
                        description_2,
                        quantity_Requested,
                        issuing_Store,
                        shortcut_Dimension_2_Code,
                        shortcut_Dimension_1_Code,
                        requistion_No});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void StoreRequisitionLinesAsync(string no, int type, string description_2, decimal quantity_Requested, string issuing_Store, string shortcut_Dimension_2_Code, string shortcut_Dimension_1_Code, string requistion_No) {
            this.StoreRequisitionLinesAsync(no, type, description_2, quantity_Requested, issuing_Store, shortcut_Dimension_2_Code, shortcut_Dimension_1_Code, requistion_No, null);
        }
        
        /// <remarks/>
        public void StoreRequisitionLinesAsync(string no, int type, string description_2, decimal quantity_Requested, string issuing_Store, string shortcut_Dimension_2_Code, string shortcut_Dimension_1_Code, string requistion_No, object userState) {
            if ((this.StoreRequisitionLinesOperationCompleted == null)) {
                this.StoreRequisitionLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnStoreRequisitionLinesOperationCompleted);
            }
            this.InvokeAsync("StoreRequisitionLines", new object[] {
                        no,
                        type,
                        description_2,
                        quantity_Requested,
                        issuing_Store,
                        shortcut_Dimension_2_Code,
                        shortcut_Dimension_1_Code,
                        requistion_No}, this.StoreRequisitionLinesOperationCompleted, userState);
        }
        
        private void OnStoreRequisitionLinesOperationCompleted(object arg) {
            if ((this.StoreRequisitionLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.StoreRequisitionLinesCompleted(this, new StoreRequisitionLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:PurchReq_SendApprovalReq" +
            "uest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="PurchReq_SendApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PurchReq_SendApprovalRequest(string applicationCode, string userID) {
            this.Invoke("PurchReq_SendApprovalRequest", new object[] {
                        applicationCode,
                        userID});
        }
        
        /// <remarks/>
        public void PurchReq_SendApprovalRequestAsync(string applicationCode, string userID) {
            this.PurchReq_SendApprovalRequestAsync(applicationCode, userID, null);
        }
        
        /// <remarks/>
        public void PurchReq_SendApprovalRequestAsync(string applicationCode, string userID, object userState) {
            if ((this.PurchReq_SendApprovalRequestOperationCompleted == null)) {
                this.PurchReq_SendApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurchReq_SendApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("PurchReq_SendApprovalRequest", new object[] {
                        applicationCode,
                        userID}, this.PurchReq_SendApprovalRequestOperationCompleted, userState);
        }
        
        private void OnPurchReq_SendApprovalRequestOperationCompleted(object arg) {
            if ((this.PurchReq_SendApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurchReq_SendApprovalRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:Approver_SendLeaveForApp" +
            "roval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="Approver_SendLeaveForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Approver_SendLeaveForApproval(string applicationCode, string userID, string submitAction, string comments) {
            this.Invoke("Approver_SendLeaveForApproval", new object[] {
                        applicationCode,
                        userID,
                        submitAction,
                        comments});
        }
        
        /// <remarks/>
        public void Approver_SendLeaveForApprovalAsync(string applicationCode, string userID, string submitAction, string comments) {
            this.Approver_SendLeaveForApprovalAsync(applicationCode, userID, submitAction, comments, null);
        }
        
        /// <remarks/>
        public void Approver_SendLeaveForApprovalAsync(string applicationCode, string userID, string submitAction, string comments, object userState) {
            if ((this.Approver_SendLeaveForApprovalOperationCompleted == null)) {
                this.Approver_SendLeaveForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApprover_SendLeaveForApprovalOperationCompleted);
            }
            this.InvokeAsync("Approver_SendLeaveForApproval", new object[] {
                        applicationCode,
                        userID,
                        submitAction,
                        comments}, this.Approver_SendLeaveForApprovalOperationCompleted, userState);
        }
        
        private void OnApprover_SendLeaveForApprovalOperationCompleted(object arg) {
            if ((this.Approver_SendLeaveForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Approver_SendLeaveForApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:Approver_SendLeaveReimbu" +
            "rsmentForApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="Approver_SendLeaveReimbursmentForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Approver_SendLeaveReimbursmentForApproval(string applicationCode, string userID, string submitAction, string comments) {
            this.Invoke("Approver_SendLeaveReimbursmentForApproval", new object[] {
                        applicationCode,
                        userID,
                        submitAction,
                        comments});
        }
        
        /// <remarks/>
        public void Approver_SendLeaveReimbursmentForApprovalAsync(string applicationCode, string userID, string submitAction, string comments) {
            this.Approver_SendLeaveReimbursmentForApprovalAsync(applicationCode, userID, submitAction, comments, null);
        }
        
        /// <remarks/>
        public void Approver_SendLeaveReimbursmentForApprovalAsync(string applicationCode, string userID, string submitAction, string comments, object userState) {
            if ((this.Approver_SendLeaveReimbursmentForApprovalOperationCompleted == null)) {
                this.Approver_SendLeaveReimbursmentForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApprover_SendLeaveReimbursmentForApprovalOperationCompleted);
            }
            this.InvokeAsync("Approver_SendLeaveReimbursmentForApproval", new object[] {
                        applicationCode,
                        userID,
                        submitAction,
                        comments}, this.Approver_SendLeaveReimbursmentForApprovalOperationCompleted, userState);
        }
        
        private void OnApprover_SendLeaveReimbursmentForApprovalOperationCompleted(object arg) {
            if ((this.Approver_SendLeaveReimbursmentForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Approver_SendLeaveReimbursmentForApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:Approver_SendEmpReqForAp" +
            "proval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="Approver_SendEmpReqForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Approver_SendEmpReqForApproval(string applicationCode, string userID, string submitAction, string comments) {
            this.Invoke("Approver_SendEmpReqForApproval", new object[] {
                        applicationCode,
                        userID,
                        submitAction,
                        comments});
        }
        
        /// <remarks/>
        public void Approver_SendEmpReqForApprovalAsync(string applicationCode, string userID, string submitAction, string comments) {
            this.Approver_SendEmpReqForApprovalAsync(applicationCode, userID, submitAction, comments, null);
        }
        
        /// <remarks/>
        public void Approver_SendEmpReqForApprovalAsync(string applicationCode, string userID, string submitAction, string comments, object userState) {
            if ((this.Approver_SendEmpReqForApprovalOperationCompleted == null)) {
                this.Approver_SendEmpReqForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApprover_SendEmpReqForApprovalOperationCompleted);
            }
            this.InvokeAsync("Approver_SendEmpReqForApproval", new object[] {
                        applicationCode,
                        userID,
                        submitAction,
                        comments}, this.Approver_SendEmpReqForApprovalOperationCompleted, userState);
        }
        
        private void OnApprover_SendEmpReqForApprovalOperationCompleted(object arg) {
            if ((this.Approver_SendEmpReqForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Approver_SendEmpReqForApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:Approver_SendTransReqFor" +
            "Approval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="Approver_SendTransReqForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Approver_SendTransReqForApproval(string applicationCode, string userID, string submitAction, string comments) {
            this.Invoke("Approver_SendTransReqForApproval", new object[] {
                        applicationCode,
                        userID,
                        submitAction,
                        comments});
        }
        
        /// <remarks/>
        public void Approver_SendTransReqForApprovalAsync(string applicationCode, string userID, string submitAction, string comments) {
            this.Approver_SendTransReqForApprovalAsync(applicationCode, userID, submitAction, comments, null);
        }
        
        /// <remarks/>
        public void Approver_SendTransReqForApprovalAsync(string applicationCode, string userID, string submitAction, string comments, object userState) {
            if ((this.Approver_SendTransReqForApprovalOperationCompleted == null)) {
                this.Approver_SendTransReqForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApprover_SendTransReqForApprovalOperationCompleted);
            }
            this.InvokeAsync("Approver_SendTransReqForApproval", new object[] {
                        applicationCode,
                        userID,
                        submitAction,
                        comments}, this.Approver_SendTransReqForApprovalOperationCompleted, userState);
        }
        
        private void OnApprover_SendTransReqForApprovalOperationCompleted(object arg) {
            if ((this.Approver_SendTransReqForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Approver_SendTransReqForApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:Approver_SendStoreReqFor" +
            "Approval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="Approver_SendStoreReqForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Approver_SendStoreReqForApproval(string applicationCode, string userID, string submitAction, string comments) {
            this.Invoke("Approver_SendStoreReqForApproval", new object[] {
                        applicationCode,
                        userID,
                        submitAction,
                        comments});
        }
        
        /// <remarks/>
        public void Approver_SendStoreReqForApprovalAsync(string applicationCode, string userID, string submitAction, string comments) {
            this.Approver_SendStoreReqForApprovalAsync(applicationCode, userID, submitAction, comments, null);
        }
        
        /// <remarks/>
        public void Approver_SendStoreReqForApprovalAsync(string applicationCode, string userID, string submitAction, string comments, object userState) {
            if ((this.Approver_SendStoreReqForApprovalOperationCompleted == null)) {
                this.Approver_SendStoreReqForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApprover_SendStoreReqForApprovalOperationCompleted);
            }
            this.InvokeAsync("Approver_SendStoreReqForApproval", new object[] {
                        applicationCode,
                        userID,
                        submitAction,
                        comments}, this.Approver_SendStoreReqForApprovalOperationCompleted, userState);
        }
        
        private void OnApprover_SendStoreReqForApprovalOperationCompleted(object arg) {
            if ((this.Approver_SendStoreReqForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Approver_SendStoreReqForApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:Approver_SendTravelReqFo" +
            "rApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="Approver_SendTravelReqForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Approver_SendTravelReqForApproval(string applicationCode, string userID, string submitAction, string comments) {
            this.Invoke("Approver_SendTravelReqForApproval", new object[] {
                        applicationCode,
                        userID,
                        submitAction,
                        comments});
        }
        
        /// <remarks/>
        public void Approver_SendTravelReqForApprovalAsync(string applicationCode, string userID, string submitAction, string comments) {
            this.Approver_SendTravelReqForApprovalAsync(applicationCode, userID, submitAction, comments, null);
        }
        
        /// <remarks/>
        public void Approver_SendTravelReqForApprovalAsync(string applicationCode, string userID, string submitAction, string comments, object userState) {
            if ((this.Approver_SendTravelReqForApprovalOperationCompleted == null)) {
                this.Approver_SendTravelReqForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApprover_SendTravelReqForApprovalOperationCompleted);
            }
            this.InvokeAsync("Approver_SendTravelReqForApproval", new object[] {
                        applicationCode,
                        userID,
                        submitAction,
                        comments}, this.Approver_SendTravelReqForApprovalOperationCompleted, userState);
        }
        
        private void OnApprover_SendTravelReqForApprovalOperationCompleted(object arg) {
            if ((this.Approver_SendTravelReqForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Approver_SendTravelReqForApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:Approver_SendPurchaseReq" +
            "ForApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="Approver_SendPurchaseReqForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Approver_SendPurchaseReqForApproval(string applicationCode, string userID, string submitAction, string comments) {
            this.Invoke("Approver_SendPurchaseReqForApproval", new object[] {
                        applicationCode,
                        userID,
                        submitAction,
                        comments});
        }
        
        /// <remarks/>
        public void Approver_SendPurchaseReqForApprovalAsync(string applicationCode, string userID, string submitAction, string comments) {
            this.Approver_SendPurchaseReqForApprovalAsync(applicationCode, userID, submitAction, comments, null);
        }
        
        /// <remarks/>
        public void Approver_SendPurchaseReqForApprovalAsync(string applicationCode, string userID, string submitAction, string comments, object userState) {
            if ((this.Approver_SendPurchaseReqForApprovalOperationCompleted == null)) {
                this.Approver_SendPurchaseReqForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApprover_SendPurchaseReqForApprovalOperationCompleted);
            }
            this.InvokeAsync("Approver_SendPurchaseReqForApproval", new object[] {
                        applicationCode,
                        userID,
                        submitAction,
                        comments}, this.Approver_SendPurchaseReqForApprovalOperationCompleted, userState);
        }
        
        private void OnApprover_SendPurchaseReqForApprovalOperationCompleted(object arg) {
            if ((this.Approver_SendPurchaseReqForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Approver_SendPurchaseReqForApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:Approver_SendTimesheetFo" +
            "rApproval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="Approver_SendTimesheetForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool Approver_SendTimesheetForApproval(string applicationCode, string userID, string submitAction, string comments) {
            object[] results = this.Invoke("Approver_SendTimesheetForApproval", new object[] {
                        applicationCode,
                        userID,
                        submitAction,
                        comments});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Approver_SendTimesheetForApprovalAsync(string applicationCode, string userID, string submitAction, string comments) {
            this.Approver_SendTimesheetForApprovalAsync(applicationCode, userID, submitAction, comments, null);
        }
        
        /// <remarks/>
        public void Approver_SendTimesheetForApprovalAsync(string applicationCode, string userID, string submitAction, string comments, object userState) {
            if ((this.Approver_SendTimesheetForApprovalOperationCompleted == null)) {
                this.Approver_SendTimesheetForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApprover_SendTimesheetForApprovalOperationCompleted);
            }
            this.InvokeAsync("Approver_SendTimesheetForApproval", new object[] {
                        applicationCode,
                        userID,
                        submitAction,
                        comments}, this.Approver_SendTimesheetForApprovalOperationCompleted, userState);
        }
        
        private void OnApprover_SendTimesheetForApprovalOperationCompleted(object arg) {
            if ((this.Approver_SendTimesheetForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Approver_SendTimesheetForApprovalCompleted(this, new Approver_SendTimesheetForApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:Approver_SendPerfForAppr" +
            "oval", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="Approver_SendPerfForApproval_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Approver_SendPerfForApproval(string applicationCode, string userID, string submitAction, string comments) {
            this.Invoke("Approver_SendPerfForApproval", new object[] {
                        applicationCode,
                        userID,
                        submitAction,
                        comments});
        }
        
        /// <remarks/>
        public void Approver_SendPerfForApprovalAsync(string applicationCode, string userID, string submitAction, string comments) {
            this.Approver_SendPerfForApprovalAsync(applicationCode, userID, submitAction, comments, null);
        }
        
        /// <remarks/>
        public void Approver_SendPerfForApprovalAsync(string applicationCode, string userID, string submitAction, string comments, object userState) {
            if ((this.Approver_SendPerfForApprovalOperationCompleted == null)) {
                this.Approver_SendPerfForApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApprover_SendPerfForApprovalOperationCompleted);
            }
            this.InvokeAsync("Approver_SendPerfForApproval", new object[] {
                        applicationCode,
                        userID,
                        submitAction,
                        comments}, this.Approver_SendPerfForApprovalOperationCompleted, userState);
        }
        
        private void OnApprover_SendPerfForApprovalOperationCompleted(object arg) {
            if ((this.Approver_SendPerfForApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Approver_SendPerfForApprovalCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:UpdateApprovalEntries", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="UpdateApprovalEntries_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateApprovalEntries(int entryNO, string docNo) {
            this.Invoke("UpdateApprovalEntries", new object[] {
                        entryNO,
                        docNo});
        }
        
        /// <remarks/>
        public void UpdateApprovalEntriesAsync(int entryNO, string docNo) {
            this.UpdateApprovalEntriesAsync(entryNO, docNo, null);
        }
        
        /// <remarks/>
        public void UpdateApprovalEntriesAsync(int entryNO, string docNo, object userState) {
            if ((this.UpdateApprovalEntriesOperationCompleted == null)) {
                this.UpdateApprovalEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateApprovalEntriesOperationCompleted);
            }
            this.InvokeAsync("UpdateApprovalEntries", new object[] {
                        entryNO,
                        docNo}, this.UpdateApprovalEntriesOperationCompleted, userState);
        }
        
        private void OnUpdateApprovalEntriesOperationCompleted(object arg) {
            if ((this.UpdateApprovalEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateApprovalEntriesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:Travel_SendApprovalReque" +
            "st", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="Travel_SendApprovalRequest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Travel_SendApprovalRequest(string applicationCode, string userID) {
            this.Invoke("Travel_SendApprovalRequest", new object[] {
                        applicationCode,
                        userID});
        }
        
        /// <remarks/>
        public void Travel_SendApprovalRequestAsync(string applicationCode, string userID) {
            this.Travel_SendApprovalRequestAsync(applicationCode, userID, null);
        }
        
        /// <remarks/>
        public void Travel_SendApprovalRequestAsync(string applicationCode, string userID, object userState) {
            if ((this.Travel_SendApprovalRequestOperationCompleted == null)) {
                this.Travel_SendApprovalRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTravel_SendApprovalRequestOperationCompleted);
            }
            this.InvokeAsync("Travel_SendApprovalRequest", new object[] {
                        applicationCode,
                        userID}, this.Travel_SendApprovalRequestOperationCompleted, userState);
        }
        
        private void OnTravel_SendApprovalRequestOperationCompleted(object arg) {
            if ((this.Travel_SendApprovalRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Travel_SendApprovalRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:UploadRecords", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="UploadRecords_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int UploadRecords(string recordlinkurl, string recordID, string desc, string company_name, string user_id) {
            object[] results = this.Invoke("UploadRecords", new object[] {
                        recordlinkurl,
                        recordID,
                        desc,
                        company_name,
                        user_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadRecordsAsync(string recordlinkurl, string recordID, string desc, string company_name, string user_id) {
            this.UploadRecordsAsync(recordlinkurl, recordID, desc, company_name, user_id, null);
        }
        
        /// <remarks/>
        public void UploadRecordsAsync(string recordlinkurl, string recordID, string desc, string company_name, string user_id, object userState) {
            if ((this.UploadRecordsOperationCompleted == null)) {
                this.UploadRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadRecordsOperationCompleted);
            }
            this.InvokeAsync("UploadRecords", new object[] {
                        recordlinkurl,
                        recordID,
                        desc,
                        company_name,
                        user_id}, this.UploadRecordsOperationCompleted, userState);
        }
        
        private void OnUploadRecordsOperationCompleted(object arg) {
            if ((this.UploadRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadRecordsCompleted(this, new UploadRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:UploadSurrenderRecords", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="UploadSurrenderRecords_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int UploadSurrenderRecords(string recordlinkurl, string recordID, string desc, string company_name, string user_id) {
            object[] results = this.Invoke("UploadSurrenderRecords", new object[] {
                        recordlinkurl,
                        recordID,
                        desc,
                        company_name,
                        user_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadSurrenderRecordsAsync(string recordlinkurl, string recordID, string desc, string company_name, string user_id) {
            this.UploadSurrenderRecordsAsync(recordlinkurl, recordID, desc, company_name, user_id, null);
        }
        
        /// <remarks/>
        public void UploadSurrenderRecordsAsync(string recordlinkurl, string recordID, string desc, string company_name, string user_id, object userState) {
            if ((this.UploadSurrenderRecordsOperationCompleted == null)) {
                this.UploadSurrenderRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadSurrenderRecordsOperationCompleted);
            }
            this.InvokeAsync("UploadSurrenderRecords", new object[] {
                        recordlinkurl,
                        recordID,
                        desc,
                        company_name,
                        user_id}, this.UploadSurrenderRecordsOperationCompleted, userState);
        }
        
        private void OnUploadSurrenderRecordsOperationCompleted(object arg) {
            if ((this.UploadSurrenderRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadSurrenderRecordsCompleted(this, new UploadSurrenderRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:UploadJobApplicationReco" +
            "rds", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="UploadJobApplicationRecords_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int UploadJobApplicationRecords(string recordlinkurl, string recordID, string desc, string company_name, string user_id) {
            object[] results = this.Invoke("UploadJobApplicationRecords", new object[] {
                        recordlinkurl,
                        recordID,
                        desc,
                        company_name,
                        user_id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UploadJobApplicationRecordsAsync(string recordlinkurl, string recordID, string desc, string company_name, string user_id) {
            this.UploadJobApplicationRecordsAsync(recordlinkurl, recordID, desc, company_name, user_id, null);
        }
        
        /// <remarks/>
        public void UploadJobApplicationRecordsAsync(string recordlinkurl, string recordID, string desc, string company_name, string user_id, object userState) {
            if ((this.UploadJobApplicationRecordsOperationCompleted == null)) {
                this.UploadJobApplicationRecordsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUploadJobApplicationRecordsOperationCompleted);
            }
            this.InvokeAsync("UploadJobApplicationRecords", new object[] {
                        recordlinkurl,
                        recordID,
                        desc,
                        company_name,
                        user_id}, this.UploadJobApplicationRecordsOperationCompleted, userState);
        }
        
        private void OnUploadJobApplicationRecordsOperationCompleted(object arg) {
            if ((this.UploadJobApplicationRecordsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UploadJobApplicationRecordsCompleted(this, new UploadJobApplicationRecordsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:SendAppraisalToSuperviso" +
            "r", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="SendAppraisalToSupervisor_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string SendAppraisalToSupervisor(string appraisalNo) {
            object[] results = this.Invoke("SendAppraisalToSupervisor", new object[] {
                        appraisalNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendAppraisalToSupervisorAsync(string appraisalNo) {
            this.SendAppraisalToSupervisorAsync(appraisalNo, null);
        }
        
        /// <remarks/>
        public void SendAppraisalToSupervisorAsync(string appraisalNo, object userState) {
            if ((this.SendAppraisalToSupervisorOperationCompleted == null)) {
                this.SendAppraisalToSupervisorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendAppraisalToSupervisorOperationCompleted);
            }
            this.InvokeAsync("SendAppraisalToSupervisor", new object[] {
                        appraisalNo}, this.SendAppraisalToSupervisorOperationCompleted, userState);
        }
        
        private void OnSendAppraisalToSupervisorOperationCompleted(object arg) {
            if ((this.SendAppraisalToSupervisorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendAppraisalToSupervisorCompleted(this, new SendAppraisalToSupervisorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:ReturnAppraisalToSupervi" +
            "sor", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="ReturnAppraisalToSupervisor_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ReturnAppraisalToSupervisor(string appraisalNo) {
            object[] results = this.Invoke("ReturnAppraisalToSupervisor", new object[] {
                        appraisalNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnAppraisalToSupervisorAsync(string appraisalNo) {
            this.ReturnAppraisalToSupervisorAsync(appraisalNo, null);
        }
        
        /// <remarks/>
        public void ReturnAppraisalToSupervisorAsync(string appraisalNo, object userState) {
            if ((this.ReturnAppraisalToSupervisorOperationCompleted == null)) {
                this.ReturnAppraisalToSupervisorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnAppraisalToSupervisorOperationCompleted);
            }
            this.InvokeAsync("ReturnAppraisalToSupervisor", new object[] {
                        appraisalNo}, this.ReturnAppraisalToSupervisorOperationCompleted, userState);
        }
        
        private void OnReturnAppraisalToSupervisorOperationCompleted(object arg) {
            if ((this.ReturnAppraisalToSupervisorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnAppraisalToSupervisorCompleted(this, new ReturnAppraisalToSupervisorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:ReturnAppraisalToApprais" +
            "ee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="ReturnAppraisalToAppraisee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ReturnAppraisalToAppraisee(string appraisalNo) {
            object[] results = this.Invoke("ReturnAppraisalToAppraisee", new object[] {
                        appraisalNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnAppraisalToAppraiseeAsync(string appraisalNo) {
            this.ReturnAppraisalToAppraiseeAsync(appraisalNo, null);
        }
        
        /// <remarks/>
        public void ReturnAppraisalToAppraiseeAsync(string appraisalNo, object userState) {
            if ((this.ReturnAppraisalToAppraiseeOperationCompleted == null)) {
                this.ReturnAppraisalToAppraiseeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnAppraisalToAppraiseeOperationCompleted);
            }
            this.InvokeAsync("ReturnAppraisalToAppraisee", new object[] {
                        appraisalNo}, this.ReturnAppraisalToAppraiseeOperationCompleted, userState);
        }
        
        private void OnReturnAppraisalToAppraiseeOperationCompleted(object arg) {
            if ((this.ReturnAppraisalToAppraiseeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnAppraisalToAppraiseeCompleted(this, new ReturnAppraisalToAppraiseeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:Approve_Appraisal", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="Approve_Appraisal_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string Approve_Appraisal(string appraisalNo) {
            object[] results = this.Invoke("Approve_Appraisal", new object[] {
                        appraisalNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Approve_AppraisalAsync(string appraisalNo) {
            this.Approve_AppraisalAsync(appraisalNo, null);
        }
        
        /// <remarks/>
        public void Approve_AppraisalAsync(string appraisalNo, object userState) {
            if ((this.Approve_AppraisalOperationCompleted == null)) {
                this.Approve_AppraisalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApprove_AppraisalOperationCompleted);
            }
            this.InvokeAsync("Approve_Appraisal", new object[] {
                        appraisalNo}, this.Approve_AppraisalOperationCompleted, userState);
        }
        
        private void OnApprove_AppraisalOperationCompleted(object arg) {
            if ((this.Approve_AppraisalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Approve_AppraisalCompleted(this, new Approve_AppraisalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:ModifyImprestHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="ModifyImprestHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string ModifyImprestHeader([System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime beginDate, string donorCode, string projectCode, string programCode, string activity, string responsibilityCenter, string purpose, string cashier, string county, string accountNo, string accountName, string reqNo) {
            object[] results = this.Invoke("ModifyImprestHeader", new object[] {
                        beginDate,
                        donorCode,
                        projectCode,
                        programCode,
                        activity,
                        responsibilityCenter,
                        purpose,
                        cashier,
                        county,
                        accountNo,
                        accountName,
                        reqNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyImprestHeaderAsync(System.DateTime beginDate, string donorCode, string projectCode, string programCode, string activity, string responsibilityCenter, string purpose, string cashier, string county, string accountNo, string accountName, string reqNo) {
            this.ModifyImprestHeaderAsync(beginDate, donorCode, projectCode, programCode, activity, responsibilityCenter, purpose, cashier, county, accountNo, accountName, reqNo, null);
        }
        
        /// <remarks/>
        public void ModifyImprestHeaderAsync(System.DateTime beginDate, string donorCode, string projectCode, string programCode, string activity, string responsibilityCenter, string purpose, string cashier, string county, string accountNo, string accountName, string reqNo, object userState) {
            if ((this.ModifyImprestHeaderOperationCompleted == null)) {
                this.ModifyImprestHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyImprestHeaderOperationCompleted);
            }
            this.InvokeAsync("ModifyImprestHeader", new object[] {
                        beginDate,
                        donorCode,
                        projectCode,
                        programCode,
                        activity,
                        responsibilityCenter,
                        purpose,
                        cashier,
                        county,
                        accountNo,
                        accountName,
                        reqNo}, this.ModifyImprestHeaderOperationCompleted, userState);
        }
        
        private void OnModifyImprestHeaderOperationCompleted(object arg) {
            if ((this.ModifyImprestHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyImprestHeaderCompleted(this, new ModifyImprestHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:ModifyImprestLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="ModifyImprestLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int ModifyImprestLines(string req_No, string advance_Type, string destination_Code, int no_of_Days, decimal amount, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime begin_Date, int entryNo) {
            object[] results = this.Invoke("ModifyImprestLines", new object[] {
                        req_No,
                        advance_Type,
                        destination_Code,
                        no_of_Days,
                        amount,
                        begin_Date,
                        entryNo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ModifyImprestLinesAsync(string req_No, string advance_Type, string destination_Code, int no_of_Days, decimal amount, System.DateTime begin_Date, int entryNo) {
            this.ModifyImprestLinesAsync(req_No, advance_Type, destination_Code, no_of_Days, amount, begin_Date, entryNo, null);
        }
        
        /// <remarks/>
        public void ModifyImprestLinesAsync(string req_No, string advance_Type, string destination_Code, int no_of_Days, decimal amount, System.DateTime begin_Date, int entryNo, object userState) {
            if ((this.ModifyImprestLinesOperationCompleted == null)) {
                this.ModifyImprestLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnModifyImprestLinesOperationCompleted);
            }
            this.InvokeAsync("ModifyImprestLines", new object[] {
                        req_No,
                        advance_Type,
                        destination_Code,
                        no_of_Days,
                        amount,
                        begin_Date,
                        entryNo}, this.ModifyImprestLinesOperationCompleted, userState);
        }
        
        private void OnModifyImprestLinesOperationCompleted(object arg) {
            if ((this.ModifyImprestLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ModifyImprestLinesCompleted(this, new ModifyImprestLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:DeleteImprestHeader", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="DeleteImprestHeader_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string DeleteImprestHeader(string reqNo) {
            object[] results = this.Invoke("DeleteImprestHeader", new object[] {
                        reqNo});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteImprestHeaderAsync(string reqNo) {
            this.DeleteImprestHeaderAsync(reqNo, null);
        }
        
        /// <remarks/>
        public void DeleteImprestHeaderAsync(string reqNo, object userState) {
            if ((this.DeleteImprestHeaderOperationCompleted == null)) {
                this.DeleteImprestHeaderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteImprestHeaderOperationCompleted);
            }
            this.InvokeAsync("DeleteImprestHeader", new object[] {
                        reqNo}, this.DeleteImprestHeaderOperationCompleted, userState);
        }
        
        private void OnDeleteImprestHeaderOperationCompleted(object arg) {
            if ((this.DeleteImprestHeaderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteImprestHeaderCompleted(this, new DeleteImprestHeaderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/PortalWebService:DeleteImprestLines", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", ResponseElementName="DeleteImprestLines_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/PortalWebService", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int DeleteImprestLines(int entryNo) {
            object[] results = this.Invoke("DeleteImprestLines", new object[] {
                        entryNo});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteImprestLinesAsync(int entryNo) {
            this.DeleteImprestLinesAsync(entryNo, null);
        }
        
        /// <remarks/>
        public void DeleteImprestLinesAsync(int entryNo, object userState) {
            if ((this.DeleteImprestLinesOperationCompleted == null)) {
                this.DeleteImprestLinesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteImprestLinesOperationCompleted);
            }
            this.InvokeAsync("DeleteImprestLines", new object[] {
                        entryNo}, this.DeleteImprestLinesOperationCompleted, userState);
        }
        
        private void OnDeleteImprestLinesOperationCompleted(object arg) {
            if ((this.DeleteImprestLinesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteImprestLinesCompleted(this, new DeleteImprestLinesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void HRLeaveAppInsertCompletedEventHandler(object sender, HRLeaveAppInsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HRLeaveAppInsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HRLeaveAppInsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void HRTransportAppInsertCompletedEventHandler(object sender, HRTransportAppInsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HRTransportAppInsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HRTransportAppInsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void HRTrainingAppMofifyCompletedEventHandler(object sender, HRTrainingAppMofifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HRTrainingAppMofifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HRTrainingAppMofifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void HRTrainingLinesParticipantsInsertCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void SumbitTrainingForApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void HRTransportRequisitionInsertCompletedEventHandler(object sender, HRTransportRequisitionInsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HRTransportRequisitionInsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HRTransportRequisitionInsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void SendLeaveForApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void SubmitTransportRequestForApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void HRAppraisalHeaderInsertCompletedEventHandler(object sender, HRAppraisalHeaderInsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HRAppraisalHeaderInsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HRAppraisalHeaderInsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void HRAppraisalInsertLinesCompletedEventHandler(object sender, HRAppraisalInsertLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HRAppraisalInsertLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HRAppraisalInsertLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void Store_SendApprovalRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void Appraisal_SendApprovalRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void LeaveReimbursment_SendApprovalRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void HR_Objectives_SettingCompletedEventHandler(object sender, HR_Objectives_SettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HR_Objectives_SettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HR_Objectives_SettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void HR_Objectives_Setting_KPICompletedEventHandler(object sender, HR_Objectives_Setting_KPICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HR_Objectives_Setting_KPICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HR_Objectives_Setting_KPICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void HR_Objectives_Setting_KPI_ModifyCompletedEventHandler(object sender, HR_Objectives_Setting_KPI_ModifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HR_Objectives_Setting_KPI_ModifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HR_Objectives_Setting_KPI_ModifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void HR_Objectives_Setting_KPI_Modify_SupCompletedEventHandler(object sender, HR_Objectives_Setting_KPI_Modify_SupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HR_Objectives_Setting_KPI_Modify_SupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HR_Objectives_Setting_KPI_Modify_SupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void HR_Objectives_Setting_CDCompletedEventHandler(object sender, HR_Objectives_Setting_CDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HR_Objectives_Setting_CDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HR_Objectives_Setting_CDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void HR_Objectives_Setting_CD_Modify_SupCompletedEventHandler(object sender, HR_Objectives_Setting_CD_Modify_SupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HR_Objectives_Setting_CD_Modify_SupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HR_Objectives_Setting_CD_Modify_SupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void HR_Objectives_Setting_CD_ModifyCompletedEventHandler(object sender, HR_Objectives_Setting_CD_ModifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HR_Objectives_Setting_CD_ModifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HR_Objectives_Setting_CD_ModifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void HR_Objectives_Setting_KRACompletedEventHandler(object sender, HR_Objectives_Setting_KRACompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HR_Objectives_Setting_KRACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HR_Objectives_Setting_KRACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void HR_Objectives_Setting_PTCompletedEventHandler(object sender, HR_Objectives_Setting_PTCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HR_Objectives_Setting_PTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HR_Objectives_Setting_PTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void InsertPurchaseHeaderCompletedEventHandler(object sender, InsertPurchaseHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertPurchaseHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertPurchaseHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void PurchaseRequisitionLinesCompletedEventHandler(object sender, PurchaseRequisitionLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PurchaseRequisitionLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PurchaseRequisitionLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void HRTimesheetLinesModifyCompletedEventHandler(object sender, HRTimesheetLinesModifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HRTimesheetLinesModifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HRTimesheetLinesModifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void HRTimesheetLinesApprovalStatusCompletedEventHandler(object sender, HRTimesheetLinesApprovalStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HRTimesheetLinesApprovalStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HRTimesheetLinesApprovalStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void SendEmployeeRequisitionForApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void HRTimesheetLinesDeleteCompletedEventHandler(object sender, HRTimesheetLinesDeleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HRTimesheetLinesDeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HRTimesheetLinesDeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void HR_Objectives_Setting_Modify_SupCompletedEventHandler(object sender, HR_Objectives_Setting_Modify_SupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HR_Objectives_Setting_Modify_SupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HR_Objectives_Setting_Modify_SupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void HR_Objectives_Setting_ModifyCompletedEventHandler(object sender, HR_Objectives_Setting_ModifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HR_Objectives_Setting_ModifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HR_Objectives_Setting_ModifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void InsertImprestSurrenderHeaderCompletedEventHandler(object sender, InsertImprestSurrenderHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertImprestSurrenderHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertImprestSurrenderHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void InsertImprestHeaderCompletedEventHandler(object sender, InsertImprestHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertImprestHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertImprestHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void InsertImprestLinesCompletedEventHandler(object sender, InsertImprestLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertImprestLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertImprestLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void InsertImprestSurrenderLinesCompletedEventHandler(object sender, InsertImprestSurrenderLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertImprestSurrenderLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertImprestSurrenderLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void HrHREmployeeRequisitionsInsertCompletedEventHandler(object sender, HrHREmployeeRequisitionsInsertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HrHREmployeeRequisitionsInsertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HrHREmployeeRequisitionsInsertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void SendApprovalRequestFromPortalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void Timesheet_SendApprovalRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void StoreRequisitionLinesCompletedEventHandler(object sender, StoreRequisitionLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class StoreRequisitionLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal StoreRequisitionLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void PurchReq_SendApprovalRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void Approver_SendLeaveForApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void Approver_SendLeaveReimbursmentForApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void Approver_SendEmpReqForApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void Approver_SendTransReqForApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void Approver_SendStoreReqForApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void Approver_SendTravelReqForApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void Approver_SendPurchaseReqForApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void Approver_SendTimesheetForApprovalCompletedEventHandler(object sender, Approver_SendTimesheetForApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Approver_SendTimesheetForApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Approver_SendTimesheetForApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void Approver_SendPerfForApprovalCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void UpdateApprovalEntriesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void Travel_SendApprovalRequestCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void UploadRecordsCompletedEventHandler(object sender, UploadRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void UploadSurrenderRecordsCompletedEventHandler(object sender, UploadSurrenderRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadSurrenderRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadSurrenderRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void UploadJobApplicationRecordsCompletedEventHandler(object sender, UploadJobApplicationRecordsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UploadJobApplicationRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UploadJobApplicationRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void SendAppraisalToSupervisorCompletedEventHandler(object sender, SendAppraisalToSupervisorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendAppraisalToSupervisorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendAppraisalToSupervisorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void ReturnAppraisalToSupervisorCompletedEventHandler(object sender, ReturnAppraisalToSupervisorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnAppraisalToSupervisorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnAppraisalToSupervisorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void ReturnAppraisalToAppraiseeCompletedEventHandler(object sender, ReturnAppraisalToAppraiseeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnAppraisalToAppraiseeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnAppraisalToAppraiseeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void Approve_AppraisalCompletedEventHandler(object sender, Approve_AppraisalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Approve_AppraisalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Approve_AppraisalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void ModifyImprestHeaderCompletedEventHandler(object sender, ModifyImprestHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyImprestHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyImprestHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void ModifyImprestLinesCompletedEventHandler(object sender, ModifyImprestLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ModifyImprestLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ModifyImprestLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void DeleteImprestHeaderCompletedEventHandler(object sender, DeleteImprestHeaderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteImprestHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteImprestHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    public delegate void DeleteImprestLinesCompletedEventHandler(object sender, DeleteImprestLinesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2053.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteImprestLinesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteImprestLinesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591